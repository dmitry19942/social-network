{"version":3,"sources":["pages/Chat/ChatPage.tsx"],"names":["wsChanel","WebSocket","Chat","Messages","AddMessageForm","useState","messages","setMessages","useEffect","addEventListener","e","newMessages","JSON","parse","data","prevMessages","style","height","overflow","map","m","index","Message","message","src","photo","width","alt","userName","setMessage","onChange","currentTarget","value","onClick","send","ChatPage"],"mappings":"kKAEMA,EAAW,IAAIC,UAAU,gEAezBC,EAAiB,WAEnB,OAAO,gCACH,cAACC,EAAD,IACA,cAACC,EAAD,QAIFD,EAAqB,WACvB,MAAgCE,mBAA4B,IAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KASA,OAPAC,qBAAU,WACNR,EAASS,iBAAiB,WAAW,SAACC,GAClC,IAAIC,EAAcC,KAAKC,MAAMH,EAAEI,MAC/BP,GAAY,SAACQ,GAAD,4BAAqBA,GAArB,YAAsCJ,YAEvD,IAEI,qBAAKK,MAAO,CAACC,OAAQ,QAASC,SAAU,QAAxC,SACFZ,EAASa,KAAI,SAACC,EAAGC,GAAJ,OAAc,cAACC,EAAD,CAAqBC,QAASH,GAAhBC,SAI5CC,EAAgD,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACpD,OAAO,gCACH,qBAAKC,IAAKD,EAAQE,MAAOT,MAAO,CAACU,MAAO,QAASC,IAAI,KADlD,IACuD,4BAAIJ,EAAQK,WACtE,uBACCL,EAAQA,QACT,2BAIFnB,EAA2B,WAC7B,MAA8BC,mBAAS,IAAvC,mBAAOkB,EAAP,KAAgBM,EAAhB,KAUA,OAAO,gCACH,8BACI,0BAAUC,SAAU,SAACpB,GAAD,OAAOmB,EAAWnB,EAAEqB,cAAcC,QAAQA,MAAOT,MAEzE,8BACI,wBAAQU,QAbI,WACXV,IAGLvB,EAASkC,KAAKX,GACdM,EAAW,MAQP,wBAKGM,UA3DY,WACvB,OAAO,8BACH,cAACjC,EAAD","file":"static/js/5.4dac2186.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\n\r\nconst wsChanel = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\n\r\nexport type ChatMessageType = {\r\n    message: string\r\n    photo: string\r\n    userId: number\r\n    userName: string\r\n}\r\n\r\nconst ChatPage: React.FC = () => {\r\n    return <div>\r\n        <Chat />\r\n    </div>\r\n}\r\n\r\nconst Chat: React.FC = () => {\r\n\r\n    return <div>\r\n        <Messages />\r\n        <AddMessageForm />\r\n    </div>\r\n}\r\n\r\nconst Messages: React.FC = () => {\r\n    const [messages, setMessages] = useState<ChatMessageType[]>([])\r\n\r\n    useEffect(() => {\r\n        wsChanel.addEventListener('message', (e: MessageEvent) => {\r\n            let newMessages = JSON.parse(e.data)\r\n            setMessages((prevMessages) =>[...prevMessages, ...newMessages])\r\n        })\r\n    }, [])\r\n\r\n    return <div style={{height: '400px', overflow: 'auto'}}>\r\n        {messages.map((m, index) => <Message key={index} message={m} />)}\r\n    </div>\r\n}\r\n\r\nconst Message: React.FC<{message: ChatMessageType}> = ({message}) => {\r\n    return <div>\r\n        <img src={message.photo} style={{width: '30px'}} alt=''/> <b>{message.userName}</b>\r\n        <br/>\r\n        {message.message}\r\n        <hr/>\r\n    </div>\r\n}\r\n\r\nconst AddMessageForm: React.FC = () => {\r\n    const [message, setMessage] = useState('')\r\n\r\n    const sendMessage = () => {\r\n        if (!message) {\r\n            return\r\n        }\r\n        wsChanel.send(message)\r\n        setMessage('')\r\n    }\r\n\r\n    return <div>\r\n        <div>\r\n            <textarea onChange={(e) => setMessage(e.currentTarget.value)} value={message}></textarea>\r\n        </div>\r\n        <div>\r\n            <button onClick={sendMessage}>Send</button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ChatPage"],"sourceRoot":""}