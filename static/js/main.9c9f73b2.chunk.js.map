{"version":3,"sources":["utils/validators.tsx","assets/images/preloader.gif","components/common/Preloader/Preloader.tsx","components/common/Paginator/Paginator.module.css","redux/profile-reducer.tsx","redux/dialogs-reducer.tsx","assets/images/user.jpg","api/chat-api.ts","redux/chat-reducer.ts","components/Users/users.module.css","api/api.tsx","reportWebVitals.ts","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","utils/object-helpers.ts","api/users-api.ts","redux/users-reducer.tsx","redux/auth-reducer.tsx","redux/app-reducer.tsx","redux/redux-store.tsx","hoc/withSuspense.tsx","components/Users/User.tsx","components/common/Paginator/Paginator.tsx","redux/users-selectors.tsx","components/Users/UsersSearchForm.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","components/Login/Login.tsx","redux/auth-selectors.ts","components/Header/Header.tsx","App.tsx","index.tsx","components/common/FormControls/FormControls.tsx","components/common/FormControls/FormControls.module.css"],"names":["required","value","trim","maxLengthCreator","maxLength","length","Preloader","src","preloader","alt","module","exports","initialState","posts","id","message","likesCount","profile","status","profileReducer","state","action","type","newPost","Date","getTime","newPostText","filter","p","postId","photos","addPost","setStatus","setUserProfileThunkCreator","userId","dispatch","a","profileAPI","getProfile","res","data","getStatusThunkCreator","getStatus","updateStatusThunkCreator","updateStatus","resultCode","savePhotoThunkCreator","file","savePhoto","saveProfileThunkCreator","getState","auth","saveProfile","Error","stopSubmit","_error","messages","Promise","reject","dialogs","name","dialogsReducer","newMessage","newMessageBody","sendMessage","subscribers","ws","closeHandler","notifySubscribersAboutStatus","setTimeout","createChannel","messageHandler","e","newMessages","JSON","parse","forEach","s","openHandler","errorHandler","console","error","cleanUp","removeEventListener","close","WebSocket","addEventListener","chatAPI","eventName","callback","push","send","chatReducer","payload","_newMessageHandler","newMessageHandlerCreator","messagesReceived","_statusChangedHandler","statusChangedHandlerCreator","statusChanged","startMessagesListeningThunkCreator","stopMessagesListeningThunkCreator","sendMessageThunkCreator","ResultCodesEnum","ResultCodeForCaptchaEnum","instance","axios","create","baseURL","withCredentials","headers","authAPI","getLogin","get","login","email","password","rememberMe","captcha","post","logout","delete","put","formData","FormData","append","securityAPI","getCaptchaUrl","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","News","Music","Settings","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","userAPI","getUsers","currentPage","pageSize","term","friend","deleteFollow","postFollow","users","totalUsersCount","isFetching","followingInProgress","follow","unfollow","setCurrentPage","setFilter","toggleIsFetching","toggleIsFollowingProgress","requestUsersThunkCreator","totalCount","followUnfollowFlow","apiMethod","actionCreator","isAuth","captchaUrl","setAuthUserData","getLoginThunkCreator","getCaptchaUrlThunkCreator","url","initialized","rootReducer","combineReducers","profilePage","dialogsPage","usersPage","followed","form","formReducer","app","chat","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","WrappedComponent","props","Suspense","fallback","User","to","user","small","userPhoto","className","disabled","some","onClick","unFollowThunkCreator","followThunkCreator","Paginator","totalItemsCount","onCurrentPageChanged","x","portionSize","pagesCount","Math","ceil","pages","i","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","paginator","selectedPage","pageNumber","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","getUsersFilter","UsersSearchForm","useSelector","enableReinitialize","initialValues","String","validate","values","onSubmit","setSubmitting","onFilterChanged","isSubmitting","as","Users","useDispatch","history","useHistory","useEffect","parsed","queryString","location","search","substr","actualPage","actualFilter","page","Number","query","pathname","bind","UsersPage","LoginReduxForm","reduxForm","handleSubmit","Field","placeholder","component","Input","formSummaryError","Login","selectIsAuth","selectCurrentUserLogin","Header","Layout","span","theme","mode","defaultSelectedKeys","Item","style","backgroundColor","icon","UserOutlined","SubMenu","Menu","Content","Footer","Sider","DialogsContainer","React","lazy","ProfileContainer","ChatPage","SuspendedDialogs","SuspendedProfile","SuspendedChatPage","App","catchAllUnhandledErrors","alert","this","initializeApp","padding","margin","width","height","title","LaptopOutlined","NotificationOutlined","minHeight","exact","path","render","textAlign","Component","AppContainer","connect","promise","all","withRouter","SamuraiJSApp","ReactDOM","document","getElementById","FormControl","meta","touched","children","hasError","formControl","Textarea","input","restProps","createField","validators","text"],"mappings":"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","file":"static/js/main.9c9f73b2.chunk.js","sourcesContent":["export type FieldValidatorType = (value: string) => string | undefined\r\n\r\nexport const required: FieldValidatorType = (value) => {\r\n    if (!value) {\r\n        return 'Field is required'\r\n    } else if (value.trim() === '') {\r\n        return 'Field is required'\r\n    } else {\r\n        return undefined\r\n    }\r\n\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number): FieldValidatorType => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/preloader.372b42cf.gif\";","import React from \"react\";\r\nimport preloader from '../../../assets/images/preloader.gif'\r\n\r\nexport const Preloader = () => {\r\n    return <div>\r\n        <img src={preloader} alt='' />\r\n    </div>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__38LH3\",\"pageNumber\":\"Paginator_pageNumber__12Z-L\",\"selectedPage\":\"Paginator_selectedPage__GpwoB\"};","import {PhotosType, Profile_PropsType} from \"../components/Profile/ProfileInfo/ProfileInfo\";\r\nimport {profileAPI} from \"../api/api\";\r\nimport {AppDispatch, AppThunk} from \"./redux-store\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n// types\r\nexport type  PostsType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\nexport type InitialProfileStateType = {\r\n    posts: PostsType[]\r\n    profile: Profile_PropsType | null\r\n    status: string\r\n}\r\nexport type ProfileActionTypes =\r\n    | ReturnType<typeof addPost>\r\n    | ReturnType<typeof setUserProfile>\r\n    | ReturnType<typeof setStatus>\r\n    | ReturnType<typeof deletePost>\r\n    | ReturnType<typeof savePhotoSuccess>\r\n\r\n// state\r\nlet initialState: InitialProfileStateType = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 10},\r\n        {id: 2, message: \"It's my first post\", likesCount: 25},\r\n        {id: 3, message: 'Blablabla', likesCount: 15},\r\n        {id: 4, message: 'Valera is the best', likesCount: 9}\r\n    ],\r\n    profile: null as Profile_PropsType | null,\r\n    status: ''\r\n}\r\n\r\nexport const profileReducer = (state: InitialProfileStateType = initialState, action: ProfileActionTypes): InitialProfileStateType => {\r\n    switch (action.type) {\r\n        case 'PROFILE/ADD-POST':\r\n            let newPost: PostsType = {\r\n                id: new Date().getTime(),\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            }\r\n            return {...state, posts: [...state.posts, newPost]}\r\n        case 'PROFILE/SET-USER-PROFILE':\r\n            return {...state, profile: action.profile}\r\n        case 'PROFILE/SET-STATUS':\r\n            return {...state, status: action.status}\r\n        case 'PROFILE/DELETE-POST':\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n        case 'PROFILE/SAVE-PHOTO-SUCCESS':\r\n            return {...state, profile: {...state.profile, photos: action.photos} as Profile_PropsType}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const addPost = (newPostText: string) => ({type: 'PROFILE/ADD-POST', newPostText} as const)\r\nexport const setUserProfile = (profile: Profile_PropsType) => ({type: 'PROFILE/SET-USER-PROFILE', profile} as const)\r\nexport const setStatus = (status: string) => ({type: 'PROFILE/SET-STATUS', status} as const)\r\nexport const deletePost = (postId: number) => ({type: 'PROFILE/DELETE-POST', postId} as const)\r\nexport const savePhotoSuccess = (photos: PhotosType) => ({type: 'PROFILE/SAVE-PHOTO-SUCCESS', photos} as const)\r\n\r\n// thunks\r\nexport const setUserProfileThunkCreator = (userId: number): AppThunk => async (dispatch: AppDispatch) => {\r\n    let res = await profileAPI.getProfile(userId)\r\n    dispatch(setUserProfile(res.data))\r\n}\r\nexport const getStatusThunkCreator = (userId: number): AppThunk => async (dispatch: AppDispatch) => {\r\n    let res = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(res.data))\r\n}\r\nexport const updateStatusThunkCreator = (status: string): AppThunk => async (dispatch: AppDispatch) => {\r\n    let res = await profileAPI.updateStatus(status)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\nexport const savePhotoThunkCreator = (file: File): AppThunk => async (dispatch: AppDispatch) => {\r\n    let res = await profileAPI.savePhoto(file)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(res.data.data.photos))\r\n    }\r\n}\r\nexport const saveProfileThunkCreator = (profile: Profile_PropsType): AppThunk => async (dispatch: AppDispatch, getState) => {\r\n    let userId = getState().auth.id\r\n    let res = await profileAPI.saveProfile(profile)\r\n    if (res.data.resultCode === 0) {\r\n        if (userId !== null) {\r\n            dispatch(setUserProfileThunkCreator(userId))\r\n        } else {\r\n            throw new Error(`userId can't be null`)\r\n        }\r\n    } else {\r\n        dispatch(stopSubmit('edit-profile', {_error: res.data.messages[0]}))\r\n        return Promise.reject(res.data.messages[0])\r\n    }\r\n}","// types\r\nexport type DialogsItemType = {\r\n    name: string\r\n    id: number\r\n}\r\nexport type MessagesType = {\r\n    id: number\r\n    messages: string\r\n}\r\nexport type InitialDialogsStateType = {\r\n    dialogs: DialogsItemType[],\r\n    messages: MessagesType[]\r\n}\r\nexport type DialogsActionTypes = ReturnType<typeof sendMessage>\r\n\r\n// state\r\nlet initialState: InitialDialogsStateType = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrey'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, messages: 'Hi'},\r\n        {id: 2, messages: 'How is your it-kamasutra?'},\r\n        {id: 3, messages: 'Yo'},\r\n        {id: 4, messages: 'Yo'},\r\n        {id: 5, messages: 'Yo'}\r\n    ]\r\n}\r\n\r\nexport const dialogsReducer = (state: InitialDialogsStateType = initialState, action: DialogsActionTypes) : InitialDialogsStateType => {\r\n    switch (action.type) {\r\n        case 'DIALOGS/SEND_MESSAGE':\r\n            let newMessage: MessagesType = {\r\n                id: new Date().getTime(),\r\n                messages: action.newMessageBody\r\n            }\r\n            return {...state,messages: [...state.messages, newMessage]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const sendMessage = (newMessageBody: string) => {\r\n    return {\r\n        type: 'DIALOGS/SEND_MESSAGE', newMessageBody\r\n    } as const\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/user.720f4e12.jpg\";","import {ChatMessageType} from \"../pages/Chat/ChatPage\";\r\nimport {StatusType} from \"../redux/chat-reducer\";\r\n\r\ntype MessagesReceivedSubscriberType = (messages: ChatMessageType[]) => void\r\ntype StatusChangedSubscriberType = (status: StatusType) => void\r\ntype EventsNamesType = 'messages-received' | 'status-changed'\r\n\r\nlet subscribers = {\r\n    'messages-received': [] as MessagesReceivedSubscriberType[],\r\n    'status-changed': [] as StatusChangedSubscriberType[]\r\n}\r\n\r\nlet ws: WebSocket | null = null\r\nconst closeHandler = () => {\r\n    notifySubscribersAboutStatus('pending')\r\n    setTimeout(createChannel, 3000)\r\n}\r\n\r\nconst messageHandler = (e: MessageEvent) => {\r\n    const newMessages = JSON.parse(e.data)\r\n    subscribers['messages-received'].forEach(s => s(newMessages))\r\n}\r\nconst openHandler = () => {\r\n    notifySubscribersAboutStatus('ready')\r\n}\r\nconst errorHandler = () => {\r\n    notifySubscribersAboutStatus('error')\r\n    console.error('REFRESH PAGE')\r\n}\r\n\r\nconst cleanUp = () => {\r\n    ws?.removeEventListener('close', closeHandler)\r\n    ws?.removeEventListener('message', messageHandler)\r\n    ws?.removeEventListener('open', openHandler)\r\n    ws?.removeEventListener('error', errorHandler)\r\n}\r\nconst notifySubscribersAboutStatus = (status: StatusType) => {\r\n    subscribers['status-changed'].forEach(s => s(status))\r\n}\r\n\r\nfunction createChannel() {\r\n    cleanUp()\r\n    ws?.close()\r\n\r\n    ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\n    notifySubscribersAboutStatus('pending')\r\n    ws.addEventListener('close', closeHandler)\r\n    ws.addEventListener('message', messageHandler)\r\n    ws.addEventListener('open', openHandler)\r\n    ws.addEventListener('error', errorHandler)\r\n}\r\n\r\nexport const chatAPI = {\r\n    start() {\r\n        createChannel()\r\n    },\r\n    stop() {\r\n        subscribers['messages-received'] = []\r\n        subscribers['status-changed'] = []\r\n       cleanUp()\r\n        ws?.close()\r\n    },\r\n    subscribe(eventName: EventsNamesType, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\r\n        // @ts-ignore\r\n        subscribers[eventName].push(callback)\r\n        return () => {\r\n            // @ts-ignore\r\n            subscribers[eventName] = subscribers[eventName].filter(s => s !== callback)\r\n        }\r\n    },\r\n    unsubscribe(eventName: EventsNamesType, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\r\n        // @ts-ignore\r\n        subscribers[eventName] = subscribers[eventName].filter(s => s !== callback)\r\n    },\r\n    sendMessage(message: string) {\r\n        ws?.send(message)\r\n    }\r\n}","import {ChatMessageType} from \"../pages/Chat/ChatPage\";\r\nimport {AppDispatch, AppThunk} from \"./redux-store\";\r\nimport {chatAPI} from \"../api/chat-api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n// types\r\nexport type ChatActionTypes = ReturnType<typeof messagesReceived> | ReturnType<typeof statusChanged>\r\nexport type initialStateType = typeof initialState\r\nexport type StatusType = 'pending' | 'ready' | 'error'\r\n\r\n// state\r\nlet initialState = {\r\n    messages: [] as ChatMessageType[],\r\n    status: 'pending' as StatusType\r\n}\r\n\r\nexport const chatReducer = (state = initialState, action: ChatActionTypes): initialStateType => {\r\n    switch (action.type) {\r\n        case 'CHAT/MESSAGES_RECEIVED':\r\n            return {...state, messages: [...state.messages, ...action.payload.messages]}\r\n        case 'CHAT/STATUS_CHANGED':\r\n            return {...state, status: action.payload.status}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const messagesReceived = (messages: ChatMessageType[]) => ({type: 'CHAT/MESSAGES_RECEIVED', payload: {messages}} as const)\r\nexport const statusChanged = (status: StatusType) => ({type: 'CHAT/STATUS_CHANGED', payload: {status}} as const)\r\n\r\n// thunks\r\nlet _newMessageHandler: ((messages: ChatMessageType[]) => void) | null = null\r\nconst newMessageHandlerCreator = (dispatch: Dispatch) => {\r\n    if (_newMessageHandler === null) {\r\n        _newMessageHandler = (messages) => {\r\n            dispatch(messagesReceived(messages))\r\n        }\r\n    }\r\n    return _newMessageHandler\r\n}\r\n\r\nlet _statusChangedHandler: ((status: StatusType) => void) | null = null\r\nconst statusChangedHandlerCreator = (dispatch: Dispatch) => {\r\n    if (_statusChangedHandler === null) {\r\n        _statusChangedHandler = (status) => {\r\n            dispatch(statusChanged(status))\r\n        }\r\n    }\r\n    return _statusChangedHandler\r\n}\r\n\r\nexport const startMessagesListeningThunkCreator = (): AppThunk => async (dispatch: AppDispatch) => {\r\n    chatAPI.start()\r\n    chatAPI.subscribe('messages-received', newMessageHandlerCreator(dispatch))\r\n    chatAPI.subscribe('status-changed', statusChangedHandlerCreator(dispatch))\r\n    }\r\n\r\nexport const stopMessagesListeningThunkCreator = (): AppThunk => async (dispatch: AppDispatch) => {\r\n    chatAPI.unsubscribe('messages-received', newMessageHandlerCreator(dispatch))\r\n    chatAPI.unsubscribe('status-changed', statusChangedHandlerCreator(dispatch))\r\n    chatAPI.stop()\r\n}\r\nexport const sendMessageThunkCreator = (message: string): AppThunk => async (dispatch: AppDispatch) => {\r\n    chatAPI.sendMessage(message)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__2ygPv\",\"selectedPage\":\"users_selectedPage__NTteQ\"};","import axios from \"axios\";\r\nimport {PhotosType, Profile_PropsType} from \"../components/Profile/ProfileInfo/ProfileInfo\";\r\nimport {UserType} from \"../redux/users-reducer\";\r\n\r\n// types\r\nexport type GetItemsType = {\r\n    items: UserType[]\r\n    error: null | string\r\n    totalCount: number\r\n}\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1\r\n}\r\nexport enum ResultCodeForCaptchaEnum {\r\n    CaptchaIsRequired = 10\r\n}\r\nexport type APIResponseType<D = {}, RC = ResultCodesEnum> = {\r\n    data: D\r\n    messages : Array<string>\r\n    fieldsErrors: Array<string>\r\n    resultCode: RC\r\n}\r\ntype MeResponseDataType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\ntype LoginResponseDataType = {\r\n    userId: number\r\n}\r\ntype SavePhotoResponseDataType = {\r\n    photos: PhotosType\r\n}\r\ntype GetCaptchaUrlResponseType = {\r\n    url: string\r\n}\r\n\r\n// instance\r\nexport const instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {'API-KEY': 'a1c29d8b-1c83-4c49-8a4c-55a3c1e75564'},\r\n})\r\n\r\n// api\r\n\r\nexport const authAPI = {\r\n    getLogin() {\r\n        return instance.get<APIResponseType<MeResponseDataType>>(`auth/me`)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean, captcha: string) {\r\n        return instance.post<APIResponseType<LoginResponseDataType, ResultCodesEnum | ResultCodeForCaptchaEnum>>(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get<Profile_PropsType>(`profile/` + userId)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<APIResponseType>(`profile/status`, {status: status})\r\n\r\n    },\r\n    savePhoto(file: File) {\r\n        let formData = new FormData()\r\n        formData.append('image', file)\r\n\r\n        return instance.put<APIResponseType<SavePhotoResponseDataType>>(`profile/photo`, formData,{\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfile(profile: Profile_PropsType) {\r\n        return instance.put<APIResponseType>(`profile`, profile)\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get<GetCaptchaUrlResponseType>(`security/get-captcha-url`)\r\n    }\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nexport const News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\n\r\n\r\nexport const Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\n\r\n\r\nexport const Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\n","export const updateObjectInArray = (items: any, itemId: any, objPropName: any, newObjProps: any) => {\r\n    return items.map((u: any) => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n}","import {APIResponseType, GetItemsType, instance} from \"./api\";\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage: number, pageSize: number, term: string, friend: null | boolean = null) {\r\n        return instance.get<GetItemsType>(`users?page=${currentPage}&count=${pageSize}&term=${term}` + (friend === null ? '' : `&friend=${friend}`))\r\n            .then(res => res.data)\r\n    },\r\n    deleteFollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(res => res.data) as Promise<APIResponseType>\r\n    },\r\n    postFollow(userId: number) {\r\n        return instance.post<APIResponseType>(`follow/${userId}`)\r\n            .then(res => res.data)\r\n    }\r\n}","import {APIResponseType} from \"../api/api\";\r\nimport {PhotosType} from \"../components/Profile/ProfileInfo/ProfileInfo\";\r\nimport {AppDispatch, AppThunk} from \"./redux-store\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\nimport { userAPI } from \"../api/users-api\";\r\n\r\n// types\r\nexport type  UserType = {\r\n    id: number\r\n    photos: PhotosType\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n}\r\nexport type InitialStateType = {\r\n    users: UserType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n    filter: FilterType\r\n}\r\nexport type FilterType = {\r\n    term: string\r\n    friend: null | boolean\r\n}\r\nexport type UsersActionTypes =\r\n    | ReturnType<typeof follow>\r\n    | ReturnType<typeof unfollow>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setUsersTotalCount>\r\n    | ReturnType<typeof toggleIsFetching>\r\n    | ReturnType<typeof toggleIsFollowingProgress>\r\n    | ReturnType<typeof setFilter>\r\n\r\n// state\r\nlet initialState: InitialStateType = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n    filter: {\r\n        term: '',\r\n        friend: null\r\n    }\r\n}\r\n\r\nexport const usersReducer = (state: InitialStateType = initialState, action: UsersActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'USERS/FOLLOW':\r\n            return {...state, users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})}\r\n        case 'USERS/UNFOLLOW':\r\n            return {...state, users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})}\r\n        case 'USERS/SET_USERS':\r\n            return {...state, users: action.users}\r\n        case 'USERS/SET_CURRENT_PAGE':\r\n            return {...state, currentPage: action.currentPage}\r\n        case 'USERS/SET_USERS_TOTAL_COUNT':\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        case 'USERS/TOGGLE_IS_FETCHING':\r\n            return {...state, isFetching: action.isFetching}\r\n        case 'USERS/SET_FILTER':\r\n            return {...state, filter: action.payload}\r\n        case 'USERS/TOGGLE_IS_FOLLOWING_PROGRESS':\r\n            return {\r\n                ...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const follow = (userId: number) => ({type: 'USERS/FOLLOW', userId} as const)\r\nexport const unfollow = (userId: number) => ({type: 'USERS/UNFOLLOW', userId} as const)\r\nexport const setUsers = (users: UserType[]) => ({type: 'USERS/SET_USERS', users} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({type: 'USERS/SET_CURRENT_PAGE', currentPage} as const)\r\nexport const setFilter = (filter: FilterType) => ({type: 'USERS/SET_FILTER', payload: filter} as const)\r\nexport const setUsersTotalCount = (totalCount: number) => ({type: 'USERS/SET_USERS_TOTAL_COUNT', totalCount} as const)\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: 'USERS/TOGGLE_IS_FETCHING', isFetching} as const)\r\nexport const toggleIsFollowingProgress = (isFetching: boolean, userId: number) => ({\r\n    type: 'USERS/TOGGLE_IS_FOLLOWING_PROGRESS', isFetching, userId} as const)\r\n\r\n// thunks\r\nexport const requestUsersThunkCreator = (currentPage: number, pageSize: number, filter: FilterType): AppThunk => async (dispatch: AppDispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(currentPage))\r\n    dispatch(setFilter(filter))\r\n    let data = await userAPI.getUsers(currentPage, pageSize, filter.term, filter.friend)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(data.items))\r\n    dispatch(setUsersTotalCount(data.totalCount))\r\n}\r\nconst followUnfollowFlow = async (dispatch: AppDispatch,\r\n                                   userId: number,\r\n                                   apiMethod: (userId: number) => Promise<APIResponseType>,\r\n                                   actionCreator: (userId: number) => UsersActionTypes) => {\r\n    dispatch(toggleIsFollowingProgress(true, userId))\r\n    let response = await apiMethod(userId)\r\n\r\n    if (response.resultCode == 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleIsFollowingProgress(false, userId))\r\n}\r\nexport const followThunkCreator = (userId: number): AppThunk => async (dispatch: AppDispatch) => {\r\n    await followUnfollowFlow(dispatch, userId, userAPI.postFollow.bind(userAPI), follow)\r\n}\r\nexport const unFollowThunkCreator = (userId: number): AppThunk => async (dispatch: AppDispatch) => {\r\n    await followUnfollowFlow(dispatch, userId, userAPI.deleteFollow.bind(userAPI), unfollow)\r\n}\r\n\r\n\r\n","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {AppDispatch, AppThunk} from \"./redux-store\";\r\n\r\n// types\r\nexport type InitialStateType = {\r\n    id: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean,\r\n    captchaUrl: string | null\r\n}\r\nexport type AuthActionTypes = ReturnType<typeof setAuthUserData> | ReturnType<typeof getCaptchaUrl>\r\n\r\n// state\r\nlet initialState: InitialStateType = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n}\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: AuthActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'AUTH/SET_AUTH_USER_DATA':\r\n        case 'AUTH/GET_CAPTCHA_URL_SUCCESS':\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setAuthUserData = (id: number | null, email: string | null, login: string | null, isAuth: boolean) => ({type: 'AUTH/SET_AUTH_USER_DATA', payload: {id, email, login, isAuth}} as const)\r\nexport const getCaptchaUrl = (captchaUrl: string) => ({type: 'AUTH/GET_CAPTCHA_URL_SUCCESS', payload: {captchaUrl}} as const)\r\n\r\n// thunks\r\nexport const getLoginThunkCreator = (): AppThunk => async (dispatch: AppDispatch) => {\r\n    let res = await authAPI.getLogin()\r\n    if (res.data.resultCode === 0) {\r\n        let {id, email, login} = res.data.data\r\n        const action = setAuthUserData(id, email, login, true)\r\n        dispatch(action)\r\n    }\r\n}\r\nexport const loginThunkCreator = (email: string, password: string, rememberMe: boolean, captcha: string): AppThunk => async (dispatch: AppDispatch) => {\r\n    let res = await authAPI.login(email, password, rememberMe, captcha)\r\n    debugger\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(getLoginThunkCreator())\r\n    } else {\r\n        if (res.data.resultCode === 10) {\r\n        dispatch(getCaptchaUrlThunkCreator())\r\n    }\r\n        let message = res.data.messages.length > 0 ? res.data.messages[0] : 'Some error'\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n}\r\nexport const getCaptchaUrlThunkCreator = (): AppThunk => async (dispatch: AppDispatch) => {\r\n    let res = await securityAPI.getCaptchaUrl()\r\n    let captchaUrl = res.data.url\r\n    dispatch(getCaptchaUrl(captchaUrl))\r\n}\r\nexport const logoutThunkCreator = (): AppThunk => async (dispatch: AppDispatch) => {\r\n    let res = await authAPI.logout()\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}","import {getLoginThunkCreator} from \"./auth-reducer\";\r\nimport {AppDispatch, AppThunk} from \"./redux-store\";\r\n\r\n// types\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\nexport type ActionTypes = ReturnType<typeof initializedSuccess>\r\n\r\n// state\r\nlet initialState: InitialStateType = {\r\n    initialized: false\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/INITIALIZED_SUCCESS':\r\n            return {...state, initialized: true}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const initializedSuccess = () => ({type: 'APP/INITIALIZED_SUCCESS'} as const)\r\n\r\n// thunks\r\nexport const initializeApp = (): AppThunk => (dispatch: AppDispatch) => {\r\n        let promise = dispatch(getLoginThunkCreator())\r\n        Promise.all([promise])\r\n            .then(() => {\r\n                dispatch(initializedSuccess())\r\n            })\r\n    }\r\n\r\n\r\n","import {applyMiddleware, combineReducers, compose, legacy_createStore as createStore} from \"redux\";\r\nimport {ProfileActionTypes, profileReducer} from \"./profile-reducer\";\r\nimport {DialogsActionTypes, dialogsReducer} from \"./dialogs-reducer\";\r\nimport {UsersActionTypes, usersReducer} from \"./users-reducer\";\r\nimport {AuthActionTypes, authReducer} from \"./auth-reducer\";\r\nimport thunkMiddleware, {ThunkAction, ThunkDispatch} from \"redux-thunk\"\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport {ActionTypes, appReducer} from \"./app-reducer\";\r\nimport {ChatActionTypes, chatReducer} from \"./chat-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n    chat: chatReducer\r\n})\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)\r\n));\r\n\r\ntype AppActionTypes = ProfileActionTypes | DialogsActionTypes | UsersActionTypes | AuthActionTypes | ActionTypes | ChatActionTypes\r\nexport type AppRootStateType = ReturnType<typeof store.getState>\r\nexport type AppDispatch = ThunkDispatch<AppRootStateType, unknown, AppActionTypes>\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, AppActionTypes>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\"\r\n\r\nexport function withSuspense<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n    return (props: WCP) => {\r\n        return <React.Suspense fallback={<div>loading...</div>} >\r\n            <WrappedComponent {...props} />\r\n        </React.Suspense>\r\n    }\r\n}","import React from \"react\";\r\nimport s from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.jpg\";\r\nimport {UserType} from \"../../redux/users-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n// types\r\nexport type UserPropsType = {\r\n    user: UserType\r\n    followingInProgress: number[]\r\n    followThunkCreator: (userId: number) => void\r\n    unFollowThunkCreator: (userId: number) => void\r\n}\r\n\r\n// component\r\nexport const User = (props: UserPropsType) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                        <NavLink to={'/profile/' + props.user.id}>\r\n                        <img src={props.user.photos.small != null ? props.user.photos.small : userPhoto} className={s.userPhoto} alt=''/>\r\n                            </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {props.user.followed ?\r\n                            <button disabled={props.followingInProgress.some(id => id === props.user.id)} onClick={() => {\r\n                                props.unFollowThunkCreator(props.user.id)\r\n                            }\r\n                            }> Unfollow</button> :\r\n                            <button disabled={props.followingInProgress.some(id => id === props.user.id)} onClick={() => {\r\n                                props.followThunkCreator(props.user.id)\r\n                            }\r\n                            }> Follow</button>}\r\n                    </div>\r\n                </span>\r\n            <span>\r\n                    <span>\r\n                        <div>{props.user.name}</div>\r\n                        <div>{props.user.status}</div>\r\n                        <div>{'id: '}{props.user.id}</div>\r\n                    </span>\r\n                </span>\r\n        </div>)\r\n}","import React, {useState} from \"react\";\r\nimport s from './Paginator.module.css';\r\nimport cn from 'classnames'\r\n\r\n// types\r\nexport type PaginatorPropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage?: number\r\n    onCurrentPageChanged?: (currentPage: number) => void\r\n    portionSize?: number\r\n}\r\n\r\n// component\r\nexport const Paginator: React.FC<PaginatorPropsType> = ({totalItemsCount, currentPage= 1, onCurrentPageChanged= x => x, pageSize, portionSize= 10 }) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n\r\n    let pages: number[] = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div className={cn(s.paginator)}>\r\n            { portionNumber > 1 &&\r\n            <button onClick={() => { setPortionNumber(portionNumber - 1)\r\n            }}>PREV</button> }\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                return <span className={cn({\r\n                    [s.selectedPage]: currentPage === p\r\n                }, s.pageNumber) }\r\n                             key={p}\r\n                             onClick={() => {\r\n                    onCurrentPageChanged(p)\r\n                }}>{p}</span>\r\n            })}\r\n            { portionCount > portionNumber &&\r\n                <button onClick={() => { setPortionNumber(portionNumber + 1)\r\n                }}>NEXT</button> }\r\n        </div>\r\n    )\r\n}\r\n","import {AppRootStateType} from \"./redux-store\";\r\n\r\nexport const getUsers = (state: AppRootStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state: AppRootStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppRootStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppRootStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppRootStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppRootStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getUsersFilter = (state: AppRootStateType) => {\r\n    return state.usersPage.filter\r\n}\r\n","import {Field, Form, Formik} from \"formik\";\r\nimport React from \"react\";\r\nimport {FilterType} from \"../../redux/users-reducer\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getUsersFilter} from \"../../redux/users-selectors\";\r\n\r\ntype UsersSearchFormType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\ntype FriendFormType = 'true' | 'false' | 'null';\r\ntype FormType = {\r\n    term: string\r\n    friend: FriendFormType\r\n}\r\n\r\nexport const UsersSearchForm = (props: UsersSearchFormType) => {\r\n\r\n    const filter = useSelector(getUsersFilter)\r\n\r\n    const submit = (values: FormType, {setSubmitting}: {setSubmitting: (isSubmitting: boolean) => void}) => {\r\n        const filter: FilterType = {\r\n            term: values.term,\r\n            friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n\r\n        }\r\n        props.onFilterChanged(filter)\r\n        setSubmitting(false)\r\n    }\r\n\r\n    const usersSearchFormValidate = (values: any) => {\r\n        const errors = {}\r\n        return errors\r\n    }\r\n\r\n    return <div>\r\n        <Formik enableReinitialize\r\n                initialValues={{term: filter.term, friend: String(filter.friend) as FriendFormType}}\r\n                validate={usersSearchFormValidate}\r\n                onSubmit={submit}\r\n        >\r\n            {({isSubmitting}) => (\r\n                <Form>\r\n                    <Field type='text' name='term'/>\r\n                    <Field name='friend' as='select'>\r\n                        <option value=\"null\">All</option>\r\n                        <option value=\"true\">Only followed</option>\r\n                        <option value=\"false\">Only unfollowed</option>\r\n                    </Field>\r\n                    <button type='submit' disabled={isSubmitting}>\r\n                        Find\r\n                    </button>\r\n                </Form>\r\n            )}\r\n\r\n        </Formik>\r\n    </div>\r\n}","import React, {useEffect} from \"react\";\r\nimport {FilterType, requestUsersThunkCreator, followThunkCreator, unFollowThunkCreator} from \"../../redux/users-reducer\";\r\nimport {User} from \"./User\";\r\nimport {Paginator} from \"../common/Paginator/Paginator\";\r\nimport {UsersSearchForm} from \"./UsersSearchForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n    getUsersFilter\r\n} from \"../../redux/users-selectors\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport * as queryString from \"querystring\";\r\n\r\ntype QueryParamsType = { term?: string, page?: string, friend?: string };\r\n\r\n// component\r\nexport const Users = () => {\r\n    const users = useSelector(getUsers)\r\n    const totalUsersCount = useSelector(getTotalUsersCount)\r\n    const currentPage = useSelector(getCurrentPage)\r\n    const pageSize = useSelector(getPageSize)\r\n    const filter = useSelector(getUsersFilter)\r\n    const followingInProgress = useSelector(getFollowingInProgress)\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n\r\n        const parsed = queryString.parse(history.location.search.substr(1)) as QueryParamsType\r\n        let actualPage = currentPage\r\n        let actualFilter = filter\r\n\r\n        if (!!parsed.page) actualPage = Number(parsed.page)\r\n\r\n        if (!!parsed.term) actualFilter = {...actualFilter, term: parsed.term as string}\r\n\r\n        switch (parsed.friend) {\r\n            case 'null':\r\n                actualFilter = {...actualFilter, friend: null}\r\n                break\r\n            case 'true':\r\n                actualFilter = {...actualFilter, friend: true}\r\n                break\r\n            case 'false':\r\n                actualFilter = {...actualFilter, friend: false}\r\n                break\r\n        }\r\n\r\n        dispatch(requestUsersThunkCreator(actualPage, pageSize, actualFilter))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const query: QueryParamsType = {}\r\n\r\n        if (!!filter.term) query.term = filter.term\r\n        if (!!filter.friend !== null) query.friend = String(filter.friend)\r\n        if (currentPage !== 1) query.page = String(currentPage)\r\n        \r\n        history.push({\r\n            pathname: '/users',\r\n            search: queryString.stringify(query)\r\n        })\r\n    }, [filter, currentPage])\r\n\r\n    const onCurrentPageChanged = (currentPage: number) => {\r\n        dispatch(requestUsersThunkCreator(currentPage, pageSize, filter))\r\n    }\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        dispatch(requestUsersThunkCreator(1, pageSize, filter))\r\n    }\r\n    const follow = (userId: number) => {\r\n        dispatch(followThunkCreator(userId))\r\n    }\r\n    const unfollow = (userId: number) => {\r\n        dispatch(unFollowThunkCreator(userId))\r\n    }\r\n    return <div>\r\n            <UsersSearchForm onFilterChanged={onFilterChanged}/>\r\n        <div>\r\n            <Paginator totalItemsCount={totalUsersCount} pageSize={pageSize} currentPage={currentPage} onCurrentPageChanged={onCurrentPageChanged} />\r\n        </div>\r\n            {\r\n                users.map(u => <User key={u.id}\r\n                                     user={u}\r\n                                     followingInProgress={followingInProgress}\r\n                                     followThunkCreator={follow}\r\n                                     unFollowThunkCreator={unfollow}/>\r\n                )\r\n            }\r\n    </div>\r\n}\r\n\r\n","import {useSelector} from \"react-redux\";\r\nimport React from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {getIsFetching} from \"../../redux/users-selectors\";\r\n\r\n// component\r\nexport const UsersPage: React.FC = () => {\r\n    const isFetching = useSelector(getIsFetching)\r\n        return <>\r\n            {isFetching ? <Preloader/> : null}\r\n            <Users />\r\n        </>\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormControls/FormControls\";\r\nimport {required} from \"../../utils/validators\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {loginThunkCreator} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../redux/redux-store\";\r\nimport s from '../common/FormControls/FormControls.module.css'\r\n\r\n// types\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\ntype LoginFormOwnProps = {\r\n    captchaUrl: string | null\r\n}\r\n\r\n// component\r\nexport const LoginForm: React.FC<InjectedFormProps<FormDataType, LoginFormOwnProps> & LoginFormOwnProps> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Email'} name={'email'} component={Input} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'Password'} name={'password'} component={Input} type={'password'} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field component={Input} name={'rememberMe'} type=\"checkbox\"/> remember me\r\n            </div>\r\n            {props.captchaUrl && <img src={props.captchaUrl} alt=''/>}\r\n            {props.captchaUrl && <Field placeholder={'Symbols from image'} name={'captcha'} component={Input} validate={required}  />}\r\n\r\n            {props.error && <div className={s.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType, LoginFormOwnProps>({form: 'login'})(LoginForm)\r\n\r\nexport const Login = () => {\r\n    const captchaUrl = useSelector((state: AppRootStateType) => state.auth.captchaUrl)\r\n    const isAuth = useSelector((state: AppRootStateType) => state.auth.isAuth)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmit = (formData: FormDataType) => {\r\n        dispatch(loginThunkCreator(formData.email, formData.password, formData.rememberMe, formData.captcha))\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl} />\r\n    </div>\r\n}\r\n","import {AppRootStateType} from \"./redux-store\";\r\n\r\nexport const selectIsAuth = (state: AppRootStateType) => {\r\n    return state.auth.isAuth\r\n}\r\n\r\nexport const selectCurrentUserLogin = (state: AppRootStateType) => {\r\n    return state.auth.login\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {selectCurrentUserLogin, selectIsAuth} from \"../../redux/auth-selectors\";\r\nimport {logoutThunkCreator} from \"../../redux/auth-reducer\";\r\nimport {Avatar, Button, Col, Layout, Menu, Row} from \"antd\";\r\nimport {UserOutlined} from \"@ant-design/icons\";\r\n\r\n// types\r\nexport type HeaderPropsType = {}\r\n\r\n// component\r\nexport function Header(props: HeaderPropsType) {\r\n    const isAuth = useSelector(selectIsAuth)\r\n    const login = useSelector(selectCurrentUserLogin)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutCallback = () => {\r\n        dispatch(logoutThunkCreator())\r\n    }\r\n\r\n    const {Header} = Layout\r\n\r\n    return <Header className=\"header\">\r\n        <Row>\r\n            <Col span={18}>\r\n                <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n                    <Menu.Item key=\"1\"><Link to=\"/users\">Developers</Link></Menu.Item>\r\n                </Menu>\r\n            </Col>\r\n\r\n            {isAuth\r\n                ?<> <Col span={1}>\r\n                    <Avatar alt={login || ''} style={{backgroundColor: '#87d068'}} icon={<UserOutlined/>}/>\r\n                </Col>\r\n                    <Col span={5}>\r\n                        <Button onClick={logoutCallback}>Log out</Button>\r\n                    </Col>\r\n                </>\r\n                : <Col span={6}>\r\n                    <Button>\r\n                        <Link to={'/login'}>Login</Link>\r\n                    </Button>\r\n                </Col>}\r\n        </Row>\r\n    </Header>\r\n}","import React from 'react';\nimport './App.css';\nimport {BrowserRouter, Link, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\nimport {News} from \"./components/News/News\";\nimport {Music} from \"./components/Music/Music\";\nimport {Settings} from \"./components/Settings/Settings\";\nimport {AppRootStateType, store} from \"./redux/redux-store\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport {Preloader} from \"./components/common/Preloader/Preloader\";\nimport {withSuspense} from \"./hoc/withSuspense\";\nimport {UsersPage} from \"./components/Users/UsersContainer\";\nimport {Login} from \"./components/Login/Login\";\nimport 'antd/dist/antd.css';\nimport {LaptopOutlined, NotificationOutlined, UserOutlined} from '@ant-design/icons';\nimport {Breadcrumb, Layout, Menu} from 'antd';\nimport { Header } from './components/Header/Header';\n\n\nconst {SubMenu} = Menu\nconst {Content, Footer, Sider} = Layout;\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\nconst ChatPage = React.lazy(() => import('./pages/Chat/ChatPage'))\n\nconst SuspendedDialogs = withSuspense(DialogsContainer)\nconst SuspendedProfile = withSuspense(ProfileContainer)\nconst SuspendedChatPage = withSuspense(ChatPage)\n\ntype mapStateToPropsType = {\n    initialized: boolean\n}\ntype MapDispatchToPropsType = {\n    initializeApp: () => void\n}\ntype AppPropsType = mapStateToPropsType & MapDispatchToPropsType\n\n\nclass App extends React.Component<AppPropsType, AppRootStateType> {\n\n    catchAllUnhandledErrors = (e: PromiseRejectionEvent) => {\n        alert('Some error occurred')\n    }\n\n    componentDidMount() {\n        this.props.initializeApp()\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors)\n    }\n\n    componentWillMount() {\n        window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors)\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <Layout>\n                <Header/>\n                <Content style={{padding: '0 50px'}}>\n                    <Breadcrumb style={{margin: '16px 0'}}>\n                        <Breadcrumb.Item>Home</Breadcrumb.Item>\n                        <Breadcrumb.Item>List</Breadcrumb.Item>\n                        <Breadcrumb.Item>App</Breadcrumb.Item>\n                    </Breadcrumb>\n                    <Layout className=\"site-layout-background\" style={{padding: '24px 0'}}>\n                        <Sider className=\"site-layout-background\" width={200}>\n                            <Menu\n                                mode=\"inline\"\n                                // defaultSelectedKeys={['1']}\n                                // defaultOpenKeys={['sub1']}\n                                style={{height: '100%'}}\n                            >\n                                <SubMenu key=\"sub1\" icon={<UserOutlined/>} title=\"My Profile\">\n                                    <Menu.Item key=\"1\"> <Link to=\"/profile\">Profile</Link></Menu.Item>\n                                    <Menu.Item key=\"2\"> <Link to=\"/dialogs\">Messages</Link></Menu.Item>\n                                    <Menu.Item key=\"3\">option3</Menu.Item>\n                                    <Menu.Item key=\"4\">option4</Menu.Item>\n                                </SubMenu>\n                                <SubMenu key=\"sub2\" icon={<LaptopOutlined/>} title=\"Developers\">\n                                    <Menu.Item key=\"5\"><Link to=\"/users\">Developers</Link></Menu.Item>\n                                    <Menu.Item key=\"6\">option6</Menu.Item>\n                                    <Menu.Item key=\"7\">option7</Menu.Item>\n                                    <Menu.Item key=\"8\">option8</Menu.Item>\n                                </SubMenu>\n                                <SubMenu key=\"sub3\" icon={<NotificationOutlined/>} title=\"Chat\">\n                                    <Menu.Item key=\"9\"><Link to=\"/chat\">Chat</Link></Menu.Item>\n                                    <Menu.Item key=\"10\">option10</Menu.Item>\n                                    <Menu.Item key=\"11\">option11</Menu.Item>\n                                    <Menu.Item key=\"12\">option12</Menu.Item>\n                                </SubMenu>\n                                </Menu>\n                        </Sider>\n                        <Content style={{padding: '0 24px', minHeight: 280}}>\n                            <Switch>\n                                <Route exact path='/' render={() => <Redirect to={'/profile'}/>}/>\n                                <Route path={'/profile/:userId?'} render={() => <SuspendedProfile/>}/>\n                                <Route path={'/dialogs'} render={() => <SuspendedDialogs/>}/>\n                                <Route path={'/users'} render={() => <UsersPage/>}/>\n                                <Route path={'/login'} render={() => <Login/>}/>\n                                <Route path={'/news'} render={() => <News/>}/>\n                                <Route path={'/music'} render={() => <Music/>}/>\n                                <Route path={'/settings'} render={() => <Settings/>}/>\n                                <Route path={'/chat'} render={() => <SuspendedChatPage/>}/>\n                                <Route path={'*'} render={() => <div>404 NOT FOUND</div>}/>\n                            </Switch>\n                        </Content>\n                    </Layout>\n                </Content>\n                <Footer style={{textAlign: 'center'}}>Social Network ©2022 Created by dmitriy19942</Footer>\n            </Layout>\n            // <BrowserRouter>\n            //     <div className={'app-wrapper'}>\n            //         <HeaderContainer/>\n            //         <Navbar/>\n            //         <div className={'app-wrapper-content'}>\n            //             <Switch>\n            //                 <Route exact path='/' render={() => <Redirect to={'/profile'}/>}/>\n            //                 <Route path={'/profile/:userId?'} render={() => <SuspendedProfile/>}/>\n            //                 <Route path={'/dialogs'} render={() => <SuspendedDialogs/>}/>\n            //                 <Route path={'/users'} render={() => <UsersPage/>}/>\n            //                 <Route path={'/login'} render={() => <Login/>}/>\n            //                 <Route path={'/news'} render={() => <News/>}/>\n            //                 <Route path={'/music'} render={() => <Music/>}/>\n            //                 <Route path={'/settings'} render={() => <Settings/>}/>\n            //                 <Route path={'*'} render={() => <div>404 NOT FOUND</div>}/>\n            //             </Switch>\n            //         </div>\n            //     </div>\n            // </BrowserRouter>\n        )\n    }\n}\n\nconst mapStateToProps = (state: AppRootStateType): mapStateToPropsType => {\n    return {\n        initialized: state.app.initialized\n    }\n}\n\nlet AppContainer = compose<React.ComponentType>(\n    connect(mapStateToProps, {initializeApp}),\n    withRouter\n)(App)\n\nconst SamuraiJSApp: React.FC = () => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </BrowserRouter>\n}\n\nexport default SamuraiJSApp\n\n\n","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from 'react-dom';\nimport SamuraiJSApp from \"./App\";\n\n    ReactDOM.render(\n        <SamuraiJSApp/>,\n        document.getElementById('root')\n    );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from \"react\";\r\nimport s from './FormControls.module.css'\r\nimport {Field, WrappedFieldMetaProps, WrappedFieldProps} from \"redux-form\";\r\nimport { FieldValidatorType } from \"../../../utils/validators\";\r\n\r\n// types\r\ntype FormControlPropsType = {\r\n    meta: WrappedFieldMetaProps\r\n}\r\nexport type GetStringKeys<T> = Extract<keyof T, string>\r\n\r\n// component\r\nconst FormControl: React.FC<FormControlPropsType> = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            { hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport function createField<FormKeysType extends string>(placeholder: string | undefined,\r\n                                                         name: FormKeysType,\r\n                                                         validators: Array<FieldValidatorType>,\r\n                                                         component: React.FC<WrappedFieldProps>,\r\n                                                         props = {}, text = \"\") {\r\n    return <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__vX3Kp\",\"error\":\"FormControls_error__24hnp\",\"formSummaryError\":\"FormControls_formSummaryError__2XQde\"};"],"sourceRoot":""}