{"version":3,"sources":["utils/validators.tsx","assets/images/preloader.gif","components/common/Preloader/Preloader.tsx","components/common/Paginator/Paginator.module.css","api/profile-api.ts","redux/profile-reducer.tsx","redux/dialogs-reducer.tsx","assets/images/user.jpg","api/chat-api.ts","redux/chat-reducer.ts","components/Users/users.module.css","api/api.tsx","reportWebVitals.ts","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","utils/object-helpers.ts","api/users-api.ts","redux/users-reducer.tsx","api/auth-api.ts","api/security-api.ts","redux/auth-reducer.tsx","redux/app-reducer.tsx","redux/redux-store.tsx","hoc/withSuspense.tsx","components/Users/User.tsx","components/common/Paginator/Paginator.tsx","redux/users-selectors.tsx","components/Users/UsersSearchForm.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","components/Login/Login.tsx","redux/auth-selectors.ts","components/Header/Header.tsx","App.tsx","index.tsx","components/common/FormControls/FormControls.tsx","components/common/FormControls/FormControls.module.css"],"names":["required","value","trim","maxLengthCreator","maxLength","length","Preloader","src","preloader","alt","module","exports","profileAPI","userId","instance","get","status","put","file","formData","FormData","append","headers","profile","initialState","posts","id","message","likesCount","profileReducer","state","action","type","newPost","Date","getTime","newPostText","filter","p","postId","photos","addPost","setStatus","setUserProfileThunkCreator","dispatch","a","res","data","getStatusThunkCreator","updateStatusThunkCreator","resultCode","savePhotoThunkCreator","saveProfileThunkCreator","getState","auth","Error","stopSubmit","_error","messages","Promise","reject","dialogs","name","dialogsReducer","newMessage","newMessageBody","sendMessage","subscribers","ws","closeHandler","notifySubscribersAboutStatus","setTimeout","createChannel","messageHandler","e","newMessages","JSON","parse","forEach","s","openHandler","errorHandler","console","error","cleanUp","removeEventListener","close","WebSocket","addEventListener","chatAPI","eventName","callback","push","send","chatReducer","payload","map","m","v1","index","array","_newMessageHandler","newMessageHandlerCreator","messagesReceived","_statusChangedHandler","statusChangedHandlerCreator","statusChanged","startMessagesListeningThunkCreator","stopMessagesListeningThunkCreator","sendMessageThunkCreator","axios","create","baseURL","withCredentials","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","News","Music","Settings","updateObjectInArray","items","itemId","objPropName","newObjProps","u","userAPI","getUsers","currentPage","pageSize","term","friend","deleteFollow","delete","postFollow","post","users","totalUsersCount","isFetching","followingInProgress","follow","unfollow","setCurrentPage","setFilter","toggleIsFetching","toggleIsFollowingProgress","requestUsersThunkCreator","totalCount","followUnfollowFlow","apiMethod","actionCreator","authAPI","email","password","rememberMe","captcha","securityAPI","login","isAuth","captchaUrl","setAuthUserData","getCaptchaUrl","getLoginThunkCreator","getCaptchaUrlThunkCreator","url","initialized","rootReducer","combineReducers","profilePage","dialogsPage","usersPage","followed","form","formReducer","app","chat","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","WrappedComponent","props","Suspense","fallback","User","to","user","small","userPhoto","className","disabled","some","onClick","unFollowThunkCreator","followThunkCreator","Paginator","totalItemsCount","onCurrentPageChanged","x","portionSize","pagesCount","Math","ceil","pages","i","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","paginator","selectedPage","pageNumber","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","getUsersFilter","UsersSearchForm","useSelector","enableReinitialize","initialValues","String","validate","values","onSubmit","setSubmitting","onFilterChanged","isSubmitting","as","Users","useDispatch","history","useHistory","useEffect","parsed","queryString","location","search","substr","actualPage","actualFilter","page","Number","query","pathname","bind","UsersPage","LoginReduxForm","reduxForm","handleSubmit","Field","placeholder","component","Input","formSummaryError","Login","selectIsAuth","selectCurrentUserLogin","Header","Layout","span","theme","mode","defaultSelectedKeys","Item","style","backgroundColor","icon","UserOutlined","SubMenu","Menu","Content","Footer","Sider","DialogsContainer","React","lazy","ProfileContainer","ChatPage","SuspendedDialogs","SuspendedProfile","SuspendedChatPage","App","catchAllUnhandledErrors","alert","this","initializeApp","padding","margin","width","height","title","LaptopOutlined","NotificationOutlined","minHeight","exact","path","render","textAlign","Component","AppContainer","connect","promise","all","withRouter","SamuraiJSApp","ReactDOM","document","getElementById","FormControl","meta","touched","children","hasError","formControl","Textarea","input","restProps","createField","validators","text"],"mappings":"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","file":"static/js/main.a243e68f.chunk.js","sourcesContent":["export type FieldValidatorType = (value: string) => string | undefined\r\n\r\nexport const required: FieldValidatorType = (value) => {\r\n    if (!value) {\r\n        return 'Field is required'\r\n    } else if (value.trim() === '') {\r\n        return 'Field is required'\r\n    } else {\r\n        return undefined\r\n    }\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number): FieldValidatorType => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/preloader.372b42cf.gif\";","import React from \"react\";\r\nimport preloader from '../../../assets/images/preloader.gif'\r\n\r\nexport const Preloader = () => {\r\n    return <div>\r\n        <img src={preloader} alt='' />\r\n    </div>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__38LH3\",\"pageNumber\":\"Paginator_pageNumber__12Z-L\",\"selectedPage\":\"Paginator_selectedPage__GpwoB\"};","import {Profile_PropsType} from \"../components/Profile/ProfileInfo/ProfileInfo\";\r\nimport {APIResponseType, instance, SavePhotoResponseDataType} from \"./api\";\r\n\r\n// api\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get<Profile_PropsType>(`profile/` + userId)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<APIResponseType>(`profile/status`, {status: status})\r\n\r\n    },\r\n    savePhoto(file: File) {\r\n        let formData = new FormData()\r\n        formData.append('image', file)\r\n\r\n        return instance.put<APIResponseType<SavePhotoResponseDataType>>(`profile/photo`, formData,{\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfile(profile: Profile_PropsType) {\r\n        return instance.put<APIResponseType>(`profile`, profile)\r\n    }\r\n}","import {PhotosType, Profile_PropsType} from \"../components/Profile/ProfileInfo/ProfileInfo\";\r\nimport {AppDispatch, AppThunk} from \"./redux-store\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {profileAPI} from \"../api/profile-api\";\r\n\r\n// types\r\nexport type  PostsType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\nexport type InitialProfileStateType = {\r\n    posts: PostsType[]\r\n    profile: Profile_PropsType | null\r\n    status: string\r\n}\r\nexport type ProfileActionTypes =\r\n    | ReturnType<typeof addPost>\r\n    | ReturnType<typeof setUserProfile>\r\n    | ReturnType<typeof setStatus>\r\n    | ReturnType<typeof deletePost>\r\n    | ReturnType<typeof savePhotoSuccess>\r\n\r\n// state\r\nlet initialState: InitialProfileStateType = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 10},\r\n        {id: 2, message: \"It's my first post\", likesCount: 25},\r\n        {id: 3, message: 'Blablabla', likesCount: 15},\r\n        {id: 4, message: 'Valera is the best', likesCount: 9}\r\n    ],\r\n    profile: null as Profile_PropsType | null,\r\n    status: ''\r\n}\r\n\r\nexport const profileReducer = (state: InitialProfileStateType = initialState, action: ProfileActionTypes): InitialProfileStateType => {\r\n    switch (action.type) {\r\n        case 'PROFILE/ADD-POST':\r\n            let newPost: PostsType = {\r\n                id: new Date().getTime(),\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            }\r\n            return {...state, posts: [...state.posts, newPost]}\r\n        case 'PROFILE/SET-USER-PROFILE':\r\n            return {...state, profile: action.profile}\r\n        case 'PROFILE/SET-STATUS':\r\n            return {...state, status: action.status}\r\n        case 'PROFILE/DELETE-POST':\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n        case 'PROFILE/SAVE-PHOTO-SUCCESS':\r\n            return {...state, profile: {...state.profile, photos: action.photos} as Profile_PropsType}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const addPost = (newPostText: string) => ({type: 'PROFILE/ADD-POST', newPostText} as const)\r\nexport const setUserProfile = (profile: Profile_PropsType) => ({type: 'PROFILE/SET-USER-PROFILE', profile} as const)\r\nexport const setStatus = (status: string) => ({type: 'PROFILE/SET-STATUS', status} as const)\r\nexport const deletePost = (postId: number) => ({type: 'PROFILE/DELETE-POST', postId} as const)\r\nexport const savePhotoSuccess = (photos: PhotosType) => ({type: 'PROFILE/SAVE-PHOTO-SUCCESS', photos} as const)\r\n\r\n// thunks\r\nexport const setUserProfileThunkCreator = (userId: number): AppThunk => async (dispatch: AppDispatch) => {\r\n    let res = await profileAPI.getProfile(userId)\r\n    dispatch(setUserProfile(res.data))\r\n}\r\nexport const getStatusThunkCreator = (userId: number): AppThunk => async (dispatch: AppDispatch) => {\r\n    let res = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(res.data))\r\n}\r\nexport const updateStatusThunkCreator = (status: string): AppThunk => async (dispatch: AppDispatch) => {\r\n    let res = await profileAPI.updateStatus(status)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\nexport const savePhotoThunkCreator = (file: File): AppThunk => async (dispatch: AppDispatch) => {\r\n    let res = await profileAPI.savePhoto(file)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(res.data.data.photos))\r\n    }\r\n}\r\nexport const saveProfileThunkCreator = (profile: Profile_PropsType): AppThunk => async (dispatch: AppDispatch, getState) => {\r\n    let userId = getState().auth.id\r\n    let res = await profileAPI.saveProfile(profile)\r\n    if (res.data.resultCode === 0) {\r\n        if (userId !== null) {\r\n            dispatch(setUserProfileThunkCreator(userId))\r\n        } else {\r\n            throw new Error(`userId can't be null`)\r\n        }\r\n    } else {\r\n        dispatch(stopSubmit('edit-profile', {_error: res.data.messages[0]}))\r\n        return Promise.reject(res.data.messages[0])\r\n    }\r\n}","// types\r\nexport type DialogsItemType = {\r\n    name: string\r\n    id: number\r\n}\r\nexport type MessagesType = {\r\n    id: number\r\n    messages: string\r\n}\r\nexport type InitialDialogsStateType = {\r\n    dialogs: DialogsItemType[],\r\n    messages: MessagesType[]\r\n}\r\nexport type DialogsActionTypes = ReturnType<typeof sendMessage>\r\n\r\n// state\r\nlet initialState: InitialDialogsStateType = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrey'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, messages: 'Hi'},\r\n        {id: 2, messages: 'How is your it-kamasutra?'},\r\n        {id: 3, messages: 'Yo'},\r\n        {id: 4, messages: 'Yo'},\r\n        {id: 5, messages: 'Yo'}\r\n    ]\r\n}\r\n\r\nexport const dialogsReducer = (state: InitialDialogsStateType = initialState, action: DialogsActionTypes) : InitialDialogsStateType => {\r\n    switch (action.type) {\r\n        case 'DIALOGS/SEND_MESSAGE':\r\n            let newMessage: MessagesType = {\r\n                id: new Date().getTime(),\r\n                messages: action.newMessageBody\r\n            }\r\n            return {...state,messages: [...state.messages, newMessage]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const sendMessage = (newMessageBody: string) => {\r\n    return {\r\n        type: 'DIALOGS/SEND_MESSAGE', newMessageBody\r\n    } as const\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/user.720f4e12.jpg\";","import {ChatMessageAPIType, StatusType} from \"../redux/chat-reducer\";\r\n\r\n// types\r\ntype MessagesReceivedSubscriberType = (messages: ChatMessageAPIType[]) => void\r\ntype StatusChangedSubscriberType = (status: StatusType) => void\r\ntype EventsNamesType = 'messages-received' | 'status-changed'\r\n\r\nlet subscribers = {\r\n    'messages-received': [] as MessagesReceivedSubscriberType[],\r\n    'status-changed': [] as StatusChangedSubscriberType[]\r\n}\r\n\r\n// function\r\nlet ws: WebSocket | null = null\r\nconst closeHandler = () => {\r\n    notifySubscribersAboutStatus('pending')\r\n    setTimeout(createChannel, 3000)\r\n}\r\n\r\nconst messageHandler = (e: MessageEvent) => {\r\n    const newMessages = JSON.parse(e.data)\r\n    subscribers['messages-received'].forEach(s => s(newMessages))\r\n}\r\nconst openHandler = () => {\r\n    notifySubscribersAboutStatus('ready')\r\n}\r\nconst errorHandler = () => {\r\n    notifySubscribersAboutStatus('error')\r\n    console.error('REFRESH PAGE')\r\n}\r\n\r\nconst cleanUp = () => {\r\n    ws?.removeEventListener('close', closeHandler)\r\n    ws?.removeEventListener('message', messageHandler)\r\n    ws?.removeEventListener('open', openHandler)\r\n    ws?.removeEventListener('error', errorHandler)\r\n}\r\nconst notifySubscribersAboutStatus = (status: StatusType) => {\r\n    subscribers['status-changed'].forEach(s => s(status))\r\n}\r\n\r\nfunction createChannel() {\r\n    cleanUp()\r\n    ws?.close()\r\n\r\n    ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\n    notifySubscribersAboutStatus('pending')\r\n    ws.addEventListener('close', closeHandler)\r\n    ws.addEventListener('message', messageHandler)\r\n    ws.addEventListener('open', openHandler)\r\n    ws.addEventListener('error', errorHandler)\r\n}\r\n\r\n// api\r\nexport const chatAPI = {\r\n    start() {\r\n        createChannel()\r\n    },\r\n    stop() {\r\n        subscribers['messages-received'] = []\r\n        subscribers['status-changed'] = []\r\n       cleanUp()\r\n        ws?.close()\r\n    },\r\n    subscribe(eventName: EventsNamesType, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\r\n        // @ts-ignore\r\n        subscribers[eventName].push(callback)\r\n        return () => {\r\n            // @ts-ignore\r\n            subscribers[eventName] = subscribers[eventName].filter(s => s !== callback)\r\n        }\r\n    },\r\n    unsubscribe(eventName: EventsNamesType, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\r\n        // @ts-ignore\r\n        subscribers[eventName] = subscribers[eventName].filter(s => s !== callback)\r\n    },\r\n    sendMessage(message: string) {\r\n        ws?.send(message)\r\n    }\r\n}","import {AppDispatch, AppThunk} from \"./redux-store\";\r\nimport {chatAPI} from \"../api/chat-api\";\r\nimport {Dispatch} from \"redux\";\r\nimport { v1 } from \"uuid\";\r\n\r\n// types\r\nexport type ChatActionTypes = ReturnType<typeof messagesReceived> | ReturnType<typeof statusChanged> | ReturnType<typeof messagesDeleted>\r\nexport type initialStateType = typeof initialState\r\nexport type StatusType = 'pending' | 'ready' | 'error'\r\nexport type ChatMessageAPIType = {\r\n    message: string\r\n    photo: string\r\n    userId: number\r\n    userName: string\r\n}\r\ntype ChatMessageType = ChatMessageAPIType & {id: string}\r\n\r\n// state\r\nlet initialState = {\r\n    messages: [] as ChatMessageType[],\r\n    status: 'pending' as StatusType\r\n}\r\n\r\nexport const chatReducer = (state = initialState, action: ChatActionTypes): initialStateType => {\r\n    switch (action.type) {\r\n        case 'CHAT/MESSAGES_RECEIVED':\r\n            return {...state, messages: [...state.messages, ...action.payload.messages.map(m => ({...m, id: v1()}))].filter((m, index, array) => index >= array.length - 100)}\r\n        case 'CHAT/STATUS_CHANGED':\r\n            return {...state, status: action.payload.status}\r\n        case 'CHAT/MESSAGES_DELETED':\r\n            return {...state, messages: []}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const messagesReceived = (messages: ChatMessageAPIType[]) => ({type: 'CHAT/MESSAGES_RECEIVED', payload: {messages}} as const)\r\nexport const statusChanged = (status: StatusType) => ({type: 'CHAT/STATUS_CHANGED', payload: {status}} as const)\r\nexport const messagesDeleted = () => ({type: 'CHAT/MESSAGES_DELETED'} as const)\r\n\r\n// thunks\r\nlet _newMessageHandler: ((messages: ChatMessageAPIType[]) => void) | null = null\r\nconst newMessageHandlerCreator = (dispatch: Dispatch) => {\r\n    if (_newMessageHandler === null) {\r\n        _newMessageHandler = (messages) => {\r\n            dispatch(messagesReceived(messages))\r\n        }\r\n    }\r\n    return _newMessageHandler\r\n}\r\n\r\nlet _statusChangedHandler: ((status: StatusType) => void) | null = null\r\nconst statusChangedHandlerCreator = (dispatch: Dispatch) => {\r\n    if (_statusChangedHandler === null) {\r\n        _statusChangedHandler = (status) => {\r\n            dispatch(statusChanged(status))\r\n        }\r\n    }\r\n    return _statusChangedHandler\r\n}\r\n\r\nexport const startMessagesListeningThunkCreator = (): AppThunk => async (dispatch: AppDispatch) => {\r\n    chatAPI.start()\r\n    chatAPI.subscribe('messages-received', newMessageHandlerCreator(dispatch))\r\n    chatAPI.subscribe('status-changed', statusChangedHandlerCreator(dispatch))\r\n    }\r\n\r\nexport const stopMessagesListeningThunkCreator = (): AppThunk => async (dispatch: AppDispatch) => {\r\n    chatAPI.unsubscribe('messages-received', newMessageHandlerCreator(dispatch))\r\n    chatAPI.unsubscribe('status-changed', statusChangedHandlerCreator(dispatch))\r\n    dispatch(messagesDeleted())\r\n    chatAPI.stop()\r\n}\r\nexport const sendMessageThunkCreator = (message: string): AppThunk => async (dispatch: AppDispatch) => {\r\n    chatAPI.sendMessage(message)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__2ygPv\",\"selectedPage\":\"users_selectedPage__NTteQ\"};","import axios from \"axios\";\r\nimport {PhotosType} from \"../components/Profile/ProfileInfo/ProfileInfo\";\r\nimport {UserType} from \"../redux/users-reducer\";\r\n\r\n// types\r\nexport type GetItemsType = {\r\n    items: UserType[]\r\n    error: null | string\r\n    totalCount: number\r\n}\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1\r\n}\r\nexport enum ResultCodeForCaptchaEnum {\r\n    CaptchaIsRequired = 10\r\n}\r\nexport type APIResponseType<D = {}, RC = ResultCodesEnum> = {\r\n    data: D\r\n    messages : Array<string>\r\n    fieldsErrors: Array<string>\r\n    resultCode: RC\r\n}\r\nexport type MeResponseDataType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\nexport type LoginResponseDataType = {\r\n    userId: number\r\n}\r\nexport type SavePhotoResponseDataType = {\r\n    photos: PhotosType\r\n}\r\nexport type GetCaptchaUrlResponseType = {\r\n    url: string\r\n}\r\n\r\n// instance\r\nexport const instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {'API-KEY': 'a1c29d8b-1c83-4c49-8a4c-55a3c1e75564'},\r\n})\r\n\r\n\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nexport const News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\n\r\n\r\nexport const Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\n\r\n\r\nexport const Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\n","export const updateObjectInArray = (items: any, itemId: any, objPropName: any, newObjProps: any) => {\r\n    return items.map((u: any) => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n}","import {APIResponseType, GetItemsType, instance} from \"./api\";\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage: number, pageSize: number, term: string, friend: null | boolean = null) {\r\n        return instance.get<GetItemsType>(`users?page=${currentPage}&count=${pageSize}&term=${term}` + (friend === null ? '' : `&friend=${friend}`))\r\n            .then(res => res.data)\r\n    },\r\n    deleteFollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(res => res.data) as Promise<APIResponseType>\r\n    },\r\n    postFollow(userId: number) {\r\n        return instance.post<APIResponseType>(`follow/${userId}`)\r\n            .then(res => res.data)\r\n    }\r\n}","import {APIResponseType} from \"../api/api\";\r\nimport {PhotosType} from \"../components/Profile/ProfileInfo/ProfileInfo\";\r\nimport {AppDispatch, AppThunk} from \"./redux-store\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\nimport { userAPI } from \"../api/users-api\";\r\n\r\n// types\r\nexport type  UserType = {\r\n    id: number\r\n    photos: PhotosType\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n}\r\nexport type InitialStateType = {\r\n    users: UserType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n    filter: FilterType\r\n}\r\nexport type FilterType = {\r\n    term: string\r\n    friend: null | boolean\r\n}\r\nexport type UsersActionTypes =\r\n    | ReturnType<typeof follow>\r\n    | ReturnType<typeof unfollow>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setUsersTotalCount>\r\n    | ReturnType<typeof toggleIsFetching>\r\n    | ReturnType<typeof toggleIsFollowingProgress>\r\n    | ReturnType<typeof setFilter>\r\n\r\n// state\r\nlet initialState: InitialStateType = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n    filter: {\r\n        term: '',\r\n        friend: null\r\n    }\r\n}\r\n\r\nexport const usersReducer = (state: InitialStateType = initialState, action: UsersActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'USERS/FOLLOW':\r\n            return {...state, users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})}\r\n        case 'USERS/UNFOLLOW':\r\n            return {...state, users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})}\r\n        case 'USERS/SET_USERS':\r\n            return {...state, users: action.users}\r\n        case 'USERS/SET_CURRENT_PAGE':\r\n            return {...state, currentPage: action.currentPage}\r\n        case 'USERS/SET_USERS_TOTAL_COUNT':\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        case 'USERS/TOGGLE_IS_FETCHING':\r\n            return {...state, isFetching: action.isFetching}\r\n        case 'USERS/SET_FILTER':\r\n            return {...state, filter: action.payload}\r\n        case 'USERS/TOGGLE_IS_FOLLOWING_PROGRESS':\r\n            return {\r\n                ...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const follow = (userId: number) => ({type: 'USERS/FOLLOW', userId} as const)\r\nexport const unfollow = (userId: number) => ({type: 'USERS/UNFOLLOW', userId} as const)\r\nexport const setUsers = (users: UserType[]) => ({type: 'USERS/SET_USERS', users} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({type: 'USERS/SET_CURRENT_PAGE', currentPage} as const)\r\nexport const setFilter = (filter: FilterType) => ({type: 'USERS/SET_FILTER', payload: filter} as const)\r\nexport const setUsersTotalCount = (totalCount: number) => ({type: 'USERS/SET_USERS_TOTAL_COUNT', totalCount} as const)\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: 'USERS/TOGGLE_IS_FETCHING', isFetching} as const)\r\nexport const toggleIsFollowingProgress = (isFetching: boolean, userId: number) => ({\r\n    type: 'USERS/TOGGLE_IS_FOLLOWING_PROGRESS', isFetching, userId} as const)\r\n\r\n// thunks\r\nexport const requestUsersThunkCreator = (currentPage: number, pageSize: number, filter: FilterType): AppThunk => async (dispatch: AppDispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(currentPage))\r\n    dispatch(setFilter(filter))\r\n    let data = await userAPI.getUsers(currentPage, pageSize, filter.term, filter.friend)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(data.items))\r\n    dispatch(setUsersTotalCount(data.totalCount))\r\n}\r\nconst followUnfollowFlow = async (dispatch: AppDispatch,\r\n                                   userId: number,\r\n                                   apiMethod: (userId: number) => Promise<APIResponseType>,\r\n                                   actionCreator: (userId: number) => UsersActionTypes) => {\r\n    dispatch(toggleIsFollowingProgress(true, userId))\r\n    let response = await apiMethod(userId)\r\n\r\n    if (response.resultCode == 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleIsFollowingProgress(false, userId))\r\n}\r\nexport const followThunkCreator = (userId: number): AppThunk => async (dispatch: AppDispatch) => {\r\n    await followUnfollowFlow(dispatch, userId, userAPI.postFollow.bind(userAPI), follow)\r\n}\r\nexport const unFollowThunkCreator = (userId: number): AppThunk => async (dispatch: AppDispatch) => {\r\n    await followUnfollowFlow(dispatch, userId, userAPI.deleteFollow.bind(userAPI), unfollow)\r\n}\r\n\r\n\r\n","import {\r\n    APIResponseType,\r\n    instance,\r\n    LoginResponseDataType,\r\n    MeResponseDataType,\r\n    ResultCodeForCaptchaEnum,\r\n    ResultCodesEnum\r\n} from \"./api\";\r\n\r\n// api\r\nexport const authAPI = {\r\n    getLogin() {\r\n        return instance.get<APIResponseType<MeResponseDataType>>(`auth/me`)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean, captcha: string) {\r\n        return instance.post<APIResponseType<LoginResponseDataType, ResultCodesEnum | ResultCodeForCaptchaEnum>>(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}","import {GetCaptchaUrlResponseType, instance} from \"./api\";\r\n\r\n// api\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get<GetCaptchaUrlResponseType>(`security/get-captcha-url`)\r\n    }\r\n}","import {stopSubmit} from \"redux-form\";\r\nimport {AppDispatch, AppThunk} from \"./redux-store\";\r\nimport {authAPI} from \"../api/auth-api\";\r\nimport {securityAPI} from \"../api/security-api\";\r\n\r\n// types\r\nexport type InitialStateType = {\r\n    id: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean,\r\n    captchaUrl: string | null\r\n}\r\nexport type AuthActionTypes = ReturnType<typeof setAuthUserData> | ReturnType<typeof getCaptchaUrl>\r\n\r\n// state\r\nlet initialState: InitialStateType = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n}\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: AuthActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'AUTH/SET_AUTH_USER_DATA':\r\n        case 'AUTH/GET_CAPTCHA_URL_SUCCESS':\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setAuthUserData = (id: number | null, email: string | null, login: string | null, isAuth: boolean) => ({type: 'AUTH/SET_AUTH_USER_DATA', payload: {id, email, login, isAuth}} as const)\r\nexport const getCaptchaUrl = (captchaUrl: string) => ({type: 'AUTH/GET_CAPTCHA_URL_SUCCESS', payload: {captchaUrl}} as const)\r\n\r\n// thunks\r\nexport const getLoginThunkCreator = (): AppThunk => async (dispatch: AppDispatch) => {\r\n    let res = await authAPI.getLogin()\r\n    if (res.data.resultCode === 0) {\r\n        let {id, email, login} = res.data.data\r\n        const action = setAuthUserData(id, email, login, true)\r\n        dispatch(action)\r\n    }\r\n}\r\nexport const loginThunkCreator = (email: string, password: string, rememberMe: boolean, captcha: string): AppThunk => async (dispatch: AppDispatch) => {\r\n    let res = await authAPI.login(email, password, rememberMe, captcha)\r\n    debugger\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(getLoginThunkCreator())\r\n    } else {\r\n        if (res.data.resultCode === 10) {\r\n        dispatch(getCaptchaUrlThunkCreator())\r\n    }\r\n        let message = res.data.messages.length > 0 ? res.data.messages[0] : 'Some error'\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n}\r\nexport const getCaptchaUrlThunkCreator = (): AppThunk => async (dispatch: AppDispatch) => {\r\n    let res = await securityAPI.getCaptchaUrl()\r\n    let captchaUrl = res.data.url\r\n    dispatch(getCaptchaUrl(captchaUrl))\r\n}\r\nexport const logoutThunkCreator = (): AppThunk => async (dispatch: AppDispatch) => {\r\n    let res = await authAPI.logout()\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}","import {getLoginThunkCreator} from \"./auth-reducer\";\r\nimport {AppDispatch, AppThunk} from \"./redux-store\";\r\n\r\n// types\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\nexport type ActionTypes = ReturnType<typeof initializedSuccess>\r\n\r\n// state\r\nlet initialState: InitialStateType = {\r\n    initialized: false\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/INITIALIZED_SUCCESS':\r\n            return {...state, initialized: true}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const initializedSuccess = () => ({type: 'APP/INITIALIZED_SUCCESS'} as const)\r\n\r\n// thunks\r\nexport const initializeApp = (): AppThunk => (dispatch: AppDispatch) => {\r\n        let promise = dispatch(getLoginThunkCreator())\r\n        Promise.all([promise])\r\n            .then(() => {\r\n                dispatch(initializedSuccess())\r\n            })\r\n    }\r\n\r\n\r\n","import {applyMiddleware, combineReducers, compose, legacy_createStore as createStore} from \"redux\";\r\nimport {ProfileActionTypes, profileReducer} from \"./profile-reducer\";\r\nimport {DialogsActionTypes, dialogsReducer} from \"./dialogs-reducer\";\r\nimport {UsersActionTypes, usersReducer} from \"./users-reducer\";\r\nimport {AuthActionTypes, authReducer} from \"./auth-reducer\";\r\nimport thunkMiddleware, {ThunkAction, ThunkDispatch} from \"redux-thunk\"\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport {ActionTypes, appReducer} from \"./app-reducer\";\r\nimport {ChatActionTypes, chatReducer} from \"./chat-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n    chat: chatReducer\r\n})\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)\r\n));\r\n\r\ntype AppActionTypes = ProfileActionTypes | DialogsActionTypes | UsersActionTypes | AuthActionTypes | ActionTypes | ChatActionTypes\r\nexport type AppRootStateType = ReturnType<typeof store.getState>\r\nexport type AppDispatch = ThunkDispatch<AppRootStateType, unknown, AppActionTypes>\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, AppActionTypes>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\"\r\n\r\nexport function withSuspense<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n    return (props: WCP) => {\r\n        return <React.Suspense fallback={<div>loading...</div>} >\r\n            <WrappedComponent {...props} />\r\n        </React.Suspense>\r\n    }\r\n}","import React from \"react\";\r\nimport s from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.jpg\";\r\nimport {UserType} from \"../../redux/users-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n// types\r\nexport type UserPropsType = {\r\n    user: UserType\r\n    followingInProgress: number[]\r\n    followThunkCreator: (userId: number) => void\r\n    unFollowThunkCreator: (userId: number) => void\r\n}\r\n\r\n// component\r\nexport const User = (props: UserPropsType) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                        <NavLink to={'/social-network/profile/' + props.user.id}>\r\n                        <img src={props.user.photos.small != null ? props.user.photos.small : userPhoto} className={s.userPhoto} alt=''/>\r\n                            </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {props.user.followed ?\r\n                            <button disabled={props.followingInProgress.some(id => id === props.user.id)} onClick={() => {\r\n                                props.unFollowThunkCreator(props.user.id)\r\n                            }\r\n                            }> Unfollow</button> :\r\n                            <button disabled={props.followingInProgress.some(id => id === props.user.id)} onClick={() => {\r\n                                props.followThunkCreator(props.user.id)\r\n                            }\r\n                            }> Follow</button>}\r\n                    </div>\r\n                </span>\r\n            <span>\r\n                    <span>\r\n                        <div>{props.user.name}</div>\r\n                        <div>{props.user.status}</div>\r\n                        <div>{'id: '}{props.user.id}</div>\r\n                    </span>\r\n                </span>\r\n        </div>)\r\n}","import React, {useState} from \"react\";\r\nimport s from './Paginator.module.css';\r\nimport cn from 'classnames'\r\n\r\n// types\r\nexport type PaginatorPropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage?: number\r\n    onCurrentPageChanged?: (currentPage: number) => void\r\n    portionSize?: number\r\n}\r\n\r\n// component\r\nexport const Paginator: React.FC<PaginatorPropsType> = ({totalItemsCount, currentPage= 1, onCurrentPageChanged= x => x, pageSize, portionSize= 10 }) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n\r\n    let pages: number[] = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div className={cn(s.paginator)}>\r\n            { portionNumber > 1 &&\r\n            <button onClick={() => { setPortionNumber(portionNumber - 1)\r\n            }}>PREV</button> }\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                return <span className={cn({\r\n                    [s.selectedPage]: currentPage === p\r\n                }, s.pageNumber) }\r\n                             key={p}\r\n                             onClick={() => {\r\n                    onCurrentPageChanged(p)\r\n                }}>{p}</span>\r\n            })}\r\n            { portionCount > portionNumber &&\r\n                <button onClick={() => { setPortionNumber(portionNumber + 1)\r\n                }}>NEXT</button> }\r\n        </div>\r\n    )\r\n}\r\n","import {AppRootStateType} from \"./redux-store\";\r\n\r\nexport const getUsers = (state: AppRootStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state: AppRootStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppRootStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppRootStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppRootStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppRootStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getUsersFilter = (state: AppRootStateType) => {\r\n    return state.usersPage.filter\r\n}\r\n","import {Field, Form, Formik} from \"formik\";\r\nimport React from \"react\";\r\nimport {FilterType} from \"../../redux/users-reducer\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getUsersFilter} from \"../../redux/users-selectors\";\r\n\r\n// types\r\ntype UsersSearchFormType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\ntype FriendFormType = 'true' | 'false' | 'null';\r\ntype FormType = {\r\n    term: string\r\n    friend: FriendFormType\r\n}\r\n\r\n// component\r\nexport const UsersSearchForm = (props: UsersSearchFormType) => {\r\n\r\n    const filter = useSelector(getUsersFilter)\r\n\r\n    const submit = (values: FormType, {setSubmitting}: {setSubmitting: (isSubmitting: boolean) => void}) => {\r\n        const filter: FilterType = {\r\n            term: values.term,\r\n            friend: values.friend === 'null' ? null : values.friend === 'true'\r\n\r\n        }\r\n        props.onFilterChanged(filter)\r\n        setSubmitting(false)\r\n    }\r\n\r\n    const usersSearchFormValidate = (values: any) => {\r\n        return {}\r\n    }\r\n\r\n    return <div>\r\n        <Formik enableReinitialize\r\n                initialValues={{term: filter.term, friend: String(filter.friend) as FriendFormType}}\r\n                validate={usersSearchFormValidate}\r\n                onSubmit={submit}\r\n        >\r\n            {({isSubmitting}) => (\r\n                <Form>\r\n                    <Field type='text' name='term'/>\r\n                    <Field name='friend' as='select'>\r\n                        <option value=\"null\">All</option>\r\n                        <option value=\"true\">Only followed</option>\r\n                        <option value=\"false\">Only unfollowed</option>\r\n                    </Field>\r\n                    <button type='submit' disabled={isSubmitting}>\r\n                        Find\r\n                    </button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    </div>\r\n}","import React, {useEffect} from \"react\";\r\nimport {FilterType, requestUsersThunkCreator, followThunkCreator, unFollowThunkCreator} from \"../../redux/users-reducer\";\r\nimport {User} from \"./User\";\r\nimport {Paginator} from \"../common/Paginator/Paginator\";\r\nimport {UsersSearchForm} from \"./UsersSearchForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n    getUsersFilter\r\n} from \"../../redux/users-selectors\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport * as queryString from \"querystring\";\r\n\r\ntype QueryParamsType = { term?: string, page?: string, friend?: string };\r\n\r\n// component\r\nexport const Users = () => {\r\n    const users = useSelector(getUsers)\r\n    const totalUsersCount = useSelector(getTotalUsersCount)\r\n    const currentPage = useSelector(getCurrentPage)\r\n    const pageSize = useSelector(getPageSize)\r\n    const filter = useSelector(getUsersFilter)\r\n    const followingInProgress = useSelector(getFollowingInProgress)\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n\r\n        const parsed = queryString.parse(history.location.search.substr(1)) as QueryParamsType\r\n        let actualPage = currentPage\r\n        let actualFilter = filter\r\n\r\n        if (!!parsed.page) actualPage = Number(parsed.page)\r\n\r\n        if (!!parsed.term) actualFilter = {...actualFilter, term: parsed.term as string}\r\n\r\n        switch (parsed.friend) {\r\n            case 'null':\r\n                actualFilter = {...actualFilter, friend: null}\r\n                break\r\n            case 'true':\r\n                actualFilter = {...actualFilter, friend: true}\r\n                break\r\n            case 'false':\r\n                actualFilter = {...actualFilter, friend: false}\r\n                break\r\n        }\r\n\r\n        dispatch(requestUsersThunkCreator(actualPage, pageSize, actualFilter))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const query: QueryParamsType = {}\r\n\r\n        if (!!filter.term) query.term = filter.term\r\n        if (!!filter.friend !== null) query.friend = String(filter.friend)\r\n        if (currentPage !== 1) query.page = String(currentPage)\r\n        \r\n        history.push({\r\n            pathname: '/social-network/users',\r\n            search: queryString.stringify(query)\r\n        })\r\n    }, [filter, currentPage])\r\n\r\n    const onCurrentPageChanged = (currentPage: number) => {\r\n        dispatch(requestUsersThunkCreator(currentPage, pageSize, filter))\r\n    }\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        dispatch(requestUsersThunkCreator(1, pageSize, filter))\r\n    }\r\n    const follow = (userId: number) => {\r\n        dispatch(followThunkCreator(userId))\r\n    }\r\n    const unfollow = (userId: number) => {\r\n        dispatch(unFollowThunkCreator(userId))\r\n    }\r\n    return <div>\r\n            <UsersSearchForm onFilterChanged={onFilterChanged}/>\r\n        <div>\r\n            <Paginator totalItemsCount={totalUsersCount} pageSize={pageSize} currentPage={currentPage} onCurrentPageChanged={onCurrentPageChanged} />\r\n        </div>\r\n            {\r\n                users.map(u => <User key={u.id}\r\n                                     user={u}\r\n                                     followingInProgress={followingInProgress}\r\n                                     followThunkCreator={follow}\r\n                                     unFollowThunkCreator={unfollow}/>\r\n                )\r\n            }\r\n    </div>\r\n}\r\n\r\n","import {useSelector} from \"react-redux\";\r\nimport React from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {getIsFetching} from \"../../redux/users-selectors\";\r\n\r\n// component\r\nexport const UsersPage: React.FC = () => {\r\n    const isFetching = useSelector(getIsFetching)\r\n        return <>\r\n            {isFetching ? <Preloader/> : null}\r\n            <Users />\r\n        </>\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormControls/FormControls\";\r\nimport {required} from \"../../utils/validators\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {loginThunkCreator} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../redux/redux-store\";\r\nimport s from '../common/FormControls/FormControls.module.css'\r\n\r\n// types\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\ntype LoginFormOwnProps = {\r\n    captchaUrl: string | null\r\n}\r\n\r\n// component\r\nexport const LoginForm: React.FC<InjectedFormProps<FormDataType, LoginFormOwnProps> & LoginFormOwnProps> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Email'} name={'email'} component={Input} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'Password'} name={'password'} component={Input} type={'password'} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field component={Input} name={'rememberMe'} type=\"checkbox\"/> remember me\r\n            </div>\r\n            {props.captchaUrl && <img src={props.captchaUrl} alt=''/>}\r\n            {props.captchaUrl && <Field placeholder={'Symbols from image'} name={'captcha'} component={Input} validate={required}  />}\r\n\r\n            {props.error && <div className={s.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType, LoginFormOwnProps>({form: 'login'})(LoginForm)\r\n\r\nexport const Login = () => {\r\n    const captchaUrl = useSelector((state: AppRootStateType) => state.auth.captchaUrl)\r\n    const isAuth = useSelector((state: AppRootStateType) => state.auth.isAuth)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmit = (formData: FormDataType) => {\r\n        dispatch(loginThunkCreator(formData.email, formData.password, formData.rememberMe, formData.captcha))\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to={'/social-network/profile'} />\r\n    }\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl} />\r\n    </div>\r\n}\r\n","import {AppRootStateType} from \"./redux-store\";\r\n\r\nexport const selectIsAuth = (state: AppRootStateType) => {\r\n    return state.auth.isAuth\r\n}\r\n\r\nexport const selectCurrentUserLogin = (state: AppRootStateType) => {\r\n    return state.auth.login\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {selectCurrentUserLogin, selectIsAuth} from \"../../redux/auth-selectors\";\r\nimport {logoutThunkCreator} from \"../../redux/auth-reducer\";\r\nimport {Avatar, Button, Col, Layout, Menu, Row} from \"antd\";\r\nimport {UserOutlined} from \"@ant-design/icons\";\r\n\r\n// types\r\nexport type HeaderPropsType = {}\r\n\r\n// component\r\nexport function Header(props: HeaderPropsType) {\r\n    const isAuth = useSelector(selectIsAuth)\r\n    const login = useSelector(selectCurrentUserLogin)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutCallback = () => {\r\n        dispatch(logoutThunkCreator())\r\n    }\r\n\r\n    const {Header} = Layout\r\n\r\n    return <Header className=\"header\">\r\n        <Row>\r\n            <Col span={18}>\r\n                <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n                    <Menu.Item key=\"1\"><Link to=\"/social-network/users\">Developers</Link></Menu.Item>\r\n                </Menu>\r\n            </Col>\r\n\r\n            {isAuth\r\n                ?<> <Col span={1}>\r\n                    <Avatar alt={login || ''} style={{backgroundColor: '#87d068'}} icon={<UserOutlined/>}/>\r\n                </Col>\r\n                    <Col span={5}>\r\n                        <Button onClick={logoutCallback}>Log out</Button>\r\n                    </Col>\r\n                </>\r\n                : <Col span={6}>\r\n                    <Button>\r\n                        <Link to={'/social-network/login'}>Login</Link>\r\n                    </Button>\r\n                </Col>}\r\n        </Row>\r\n    </Header>\r\n}","import React from 'react';\nimport './App.css';\nimport {BrowserRouter, Link, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\nimport {News} from \"./components/News/News\";\nimport {Music} from \"./components/Music/Music\";\nimport {Settings} from \"./components/Settings/Settings\";\nimport {AppRootStateType, store} from \"./redux/redux-store\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport {Preloader} from \"./components/common/Preloader/Preloader\";\nimport {withSuspense} from \"./hoc/withSuspense\";\nimport {UsersPage} from \"./components/Users/UsersContainer\";\nimport {Login} from \"./components/Login/Login\";\nimport 'antd/dist/antd.css';\nimport {LaptopOutlined, NotificationOutlined, UserOutlined} from '@ant-design/icons';\nimport {Breadcrumb, Layout, Menu} from 'antd';\nimport { Header } from './components/Header/Header';\n\n\nconst {SubMenu} = Menu\nconst {Content, Footer, Sider} = Layout;\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\nconst ChatPage = React.lazy(() => import('./pages/Chat/ChatPage'))\n\nconst SuspendedDialogs = withSuspense(DialogsContainer)\nconst SuspendedProfile = withSuspense(ProfileContainer)\nconst SuspendedChatPage = withSuspense(ChatPage)\n\ntype mapStateToPropsType = {\n    initialized: boolean\n}\ntype MapDispatchToPropsType = {\n    initializeApp: () => void\n}\ntype AppPropsType = mapStateToPropsType & MapDispatchToPropsType\n\n\nclass App extends React.Component<AppPropsType, AppRootStateType> {\n\n    catchAllUnhandledErrors = (e: PromiseRejectionEvent) => {\n        alert('Some error occurred')\n    }\n\n    componentDidMount() {\n        this.props.initializeApp()\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors)\n    }\n\n    componentWillMount() {\n        window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors)\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <Layout>\n                <Header/>\n                <Content style={{padding: '0 50px'}}>\n                    <Breadcrumb style={{margin: '16px 0'}}>\n                        <Breadcrumb.Item>Home</Breadcrumb.Item>\n                        <Breadcrumb.Item>List</Breadcrumb.Item>\n                        <Breadcrumb.Item>App</Breadcrumb.Item>\n                    </Breadcrumb>\n                    <Layout className=\"site-layout-background\" style={{padding: '24px 0'}}>\n                        <Sider className=\"site-layout-background\" width={200}>\n                            <Menu\n                                mode=\"inline\"\n                                // defaultSelectedKeys={['1']}\n                                // defaultOpenKeys={['sub1']}\n                                style={{height: '100%'}}\n                            >\n                                <SubMenu key=\"sub1\" icon={<UserOutlined/>} title=\"My Profile\">\n                                    <Menu.Item key=\"1\"> <Link to=\"/social-network/profile\">Profile</Link></Menu.Item>\n                                    <Menu.Item key=\"2\"> <Link to=\"/social-network/dialogs\">Messages</Link></Menu.Item>\n                                    <Menu.Item key=\"3\">option3</Menu.Item>\n                                    <Menu.Item key=\"4\">option4</Menu.Item>\n                                </SubMenu>\n                                <SubMenu key=\"sub2\" icon={<LaptopOutlined/>} title=\"Developers\">\n                                    <Menu.Item key=\"5\"><Link to=\"/social-network/users\">Developers</Link></Menu.Item>\n                                    <Menu.Item key=\"6\">option6</Menu.Item>\n                                    <Menu.Item key=\"7\">option7</Menu.Item>\n                                    <Menu.Item key=\"8\">option8</Menu.Item>\n                                </SubMenu>\n                                <SubMenu key=\"sub3\" icon={<NotificationOutlined/>} title=\"Chat\">\n                                    <Menu.Item key=\"9\"><Link to=\"/social-network/chat\">Chat</Link></Menu.Item>\n                                    <Menu.Item key=\"10\">option10</Menu.Item>\n                                    <Menu.Item key=\"11\">option11</Menu.Item>\n                                    <Menu.Item key=\"12\">option12</Menu.Item>\n                                </SubMenu>\n                                </Menu>\n                        </Sider>\n                        <Content style={{padding: '0 24px', minHeight: 280}}>\n                            <Switch>\n                                <Route exact path='/' render={() => <Redirect to={'/social-network/profile'}/>}/>\n                                <Route exact path='/social-network' render={() => <Redirect to={'/social-network/profile'}/>}/>\n                                <Route path={'/social-network/profile/:userId?'} render={() => <SuspendedProfile/>}/>\n                                <Route path={'/social-network/dialogs'} render={() => <SuspendedDialogs/>}/>\n                                <Route path={'/social-network/users'} render={() => <UsersPage/>}/>\n                                <Route path={'/social-network/login'} render={() => <Login/>}/>\n                                <Route path={'/social-network/news'} render={() => <News/>}/>\n                                <Route path={'/social-network/music'} render={() => <Music/>}/>\n                                <Route path={'/social-network/settings'} render={() => <Settings/>}/>\n                                <Route path={'/social-network/chat'} render={() => <SuspendedChatPage/>}/>\n                                <Route path={'*'} render={() => <div>404 NOT FOUND</div>}/>\n                            </Switch>\n                        </Content>\n                    </Layout>\n                </Content>\n                <Footer style={{textAlign: 'center'}}>Social Network ©2022 Created by dmitriy19942</Footer>\n            </Layout>\n        )\n    }\n}\n\nconst mapStateToProps = (state: AppRootStateType): mapStateToPropsType => {\n    return {\n        initialized: state.app.initialized\n    }\n}\n\nlet AppContainer = compose<React.ComponentType>(\n    connect(mapStateToProps, {initializeApp}),\n    withRouter\n)(App)\n\nconst SamuraiJSApp: React.FC = () => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </BrowserRouter>\n}\n\nexport default SamuraiJSApp\n\n\n","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from 'react-dom';\nimport SamuraiJSApp from \"./App\";\n\n    ReactDOM.render(\n        <SamuraiJSApp/>,\n        document.getElementById('root')\n    );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from \"react\";\r\nimport s from './FormControls.module.css'\r\nimport {Field, WrappedFieldMetaProps, WrappedFieldProps} from \"redux-form\";\r\nimport { FieldValidatorType } from \"../../../utils/validators\";\r\n\r\n// types\r\ntype FormControlPropsType = {\r\n    meta: WrappedFieldMetaProps\r\n}\r\nexport type GetStringKeys<T> = Extract<keyof T, string>\r\n\r\n// component\r\nconst FormControl: React.FC<FormControlPropsType> = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            { hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}><textarea style={{width: '250px', height: '70px'}} {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport function createField<FormKeysType extends string>(placeholder: string | undefined,\r\n                                                         name: FormKeysType,\r\n                                                         validators: Array<FieldValidatorType>,\r\n                                                         component: React.FC<WrappedFieldProps>,\r\n                                                         props = {}, text = \"\") {\r\n    return <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__vX3Kp\",\"error\":\"FormControls_error__24hnp\",\"formSummaryError\":\"FormControls_formSummaryError__2XQde\"};"],"sourceRoot":""}