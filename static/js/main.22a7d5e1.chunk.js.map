{"version":3,"sources":["components/Header/Header.module.css","redux/profile-reducer.tsx","assets/images/user.jpg","redux/dialogs-reducer.tsx","components/Users/users.module.css","components/Navbar/Navbar.module.css","api/api.tsx","reportWebVitals.ts","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","utils/object-helpers.ts","api/users-api.ts","redux/users-reducer.tsx","components/Users/User.tsx","components/common/Paginator/Paginator.tsx","components/Users/UsersSearchForm.tsx","components/Users/Users.tsx","redux/users-selectors.tsx","components/Users/UsersContainer.tsx","components/Header/Header.tsx","redux/auth-reducer.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","redux/app-reducer.tsx","redux/redux-store.tsx","hoc/withSuspense.tsx","App.tsx","index.tsx","components/common/FormControls/FormControls.tsx","components/common/FormControls/FormControls.module.css","utils/validators.tsx","assets/images/preloader.gif","components/common/Preloader/Preloader.tsx","components/common/Paginator/Paginator.module.css"],"names":["module","exports","initialState","posts","id","message","likesCount","profile","status","profileReducer","state","action","type","newPost","Date","getTime","newPostText","filter","p","postId","photos","addPost","setStatus","setUserProfileThunkCreator","userId","dispatch","a","profileAPI","getProfile","res","data","getStatusThunkCreator","getStatus","updateStatusThunkCreator","updateStatus","resultCode","savePhotoThunkCreator","file","savePhoto","saveProfileThunkCreator","getState","auth","saveProfile","Error","stopSubmit","_error","messages","Promise","reject","dialogs","name","dialogsReducer","newMessage","newMessageBody","sendMessage","ResultCodesEnum","ResultCodeForCaptchaEnum","instance","axios","create","baseURL","withCredentials","headers","authAPI","getLogin","get","login","email","password","rememberMe","captcha","post","logout","delete","put","formData","FormData","append","securityAPI","getCaptchaUrl","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","s","nav","item","to","activeClassName","active","News","Music","Settings","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","userAPI","getUsers","currentPage","pageSize","term","deleteFollow","postFollow","users","totalUsersCount","isFetching","followingInProgress","follow","unfollow","setCurrentPage","setFilter","payload","toggleIsFetching","toggleIsFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","User","props","user","src","small","userPhoto","alt","followed","disabled","some","onClick","unFollowThunkCreator","followThunkCreator","Paginator","totalItemsCount","onCurrentPageChanged","x","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","paginator","selectedPage","pageNumber","UsersSearchForm","initialValues","validate","values","onSubmit","setSubmitting","onFilterChanged","isSubmitting","Users","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","getUsersFilter","UsersAPIComponent","requestUsersThunkCreator","this","Preloader","React","Component","compose","connect","totalCount","bind","Header","header","loginBlock","isAuth","logoutThunkCreator","captchaUrl","setAuthUserData","getLoginThunkCreator","getCaptchaUrlThunkCreator","url","HeaderAPIContainer","HeaderContainer","LoginReduxForm","reduxForm","form","handleSubmit","Field","placeholder","component","Input","required","error","formSummaryError","loginThunkCreator","length","initialized","rootReducer","combineReducers","profilePage","dialogsPage","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","WrappedComponent","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","SuspendedDialogs","SuspendedProfile","App","catchAllUnhandledErrors","e","alert","initializeApp","addEventListener","removeEventListener","exact","path","render","UsersContainer","AppContainer","promise","all","withRouter","SamuraiJSApp","ReactDOM","document","getElementById","FormControl","meta","touched","children","hasError","formControl","Textarea","input","restProps","createField","validators","text","value","trim","maxLengthCreator","maxLength","preloader"],"mappings":"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","file":"static/js/main.22a7d5e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3N_my\",\"loginBlock\":\"Header_loginBlock__1QUPD\"};","import {PhotosType, Profile_PropsType} from \"../components/Profile/ProfileInfo/ProfileInfo\";\r\nimport {profileAPI} from \"../api/api\";\r\nimport {AppDispatch, AppThunk} from \"./redux-store\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n// types\r\nexport type  PostsType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\nexport type InitialProfileStateType = {\r\n    posts: PostsType[]\r\n    profile: Profile_PropsType | null\r\n    status: string\r\n}\r\nexport type ProfileActionTypes =\r\n    | ReturnType<typeof addPost>\r\n    | ReturnType<typeof setUserProfile>\r\n    | ReturnType<typeof setStatus>\r\n    | ReturnType<typeof deletePost>\r\n    | ReturnType<typeof savePhotoSuccess>\r\n\r\n// state\r\nlet initialState: InitialProfileStateType = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 10},\r\n        {id: 2, message: \"It's my first post\", likesCount: 25},\r\n        {id: 3, message: 'Blablabla', likesCount: 15},\r\n        {id: 4, message: 'Valera is the best', likesCount: 9}\r\n    ],\r\n    profile: null as Profile_PropsType | null,\r\n    status: ''\r\n}\r\n\r\nexport const profileReducer = (state: InitialProfileStateType = initialState, action: ProfileActionTypes): InitialProfileStateType => {\r\n    switch (action.type) {\r\n        case 'PROFILE/ADD-POST':\r\n            let newPost: PostsType = {\r\n                id: new Date().getTime(),\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            }\r\n            return {...state, posts: [...state.posts, newPost]}\r\n        case 'PROFILE/SET-USER-PROFILE':\r\n            return {...state, profile: action.profile}\r\n        case 'PROFILE/SET-STATUS':\r\n            return {...state, status: action.status}\r\n        case 'PROFILE/DELETE-POST':\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n        case 'PROFILE/SAVE-PHOTO-SUCCESS':\r\n            return {...state, profile: {...state.profile, photos: action.photos} as Profile_PropsType}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const addPost = (newPostText: string) => ({type: 'PROFILE/ADD-POST', newPostText} as const)\r\nexport const setUserProfile = (profile: Profile_PropsType) => ({type: 'PROFILE/SET-USER-PROFILE', profile} as const)\r\nexport const setStatus = (status: string) => ({type: 'PROFILE/SET-STATUS', status} as const)\r\nexport const deletePost = (postId: number) => ({type: 'PROFILE/DELETE-POST', postId} as const)\r\nexport const savePhotoSuccess = (photos: PhotosType) => ({type: 'PROFILE/SAVE-PHOTO-SUCCESS', photos} as const)\r\n\r\n// thunks\r\nexport const setUserProfileThunkCreator = (userId: number): AppThunk => async (dispatch: AppDispatch) => {\r\n    let res = await profileAPI.getProfile(userId)\r\n    dispatch(setUserProfile(res.data))\r\n}\r\nexport const getStatusThunkCreator = (userId: number): AppThunk => async (dispatch: AppDispatch) => {\r\n    let res = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(res.data))\r\n}\r\nexport const updateStatusThunkCreator = (status: string): AppThunk => async (dispatch: AppDispatch) => {\r\n    let res = await profileAPI.updateStatus(status)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\nexport const savePhotoThunkCreator = (file: File): AppThunk => async (dispatch: AppDispatch) => {\r\n    let res = await profileAPI.savePhoto(file)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(res.data.data.photos))\r\n    }\r\n}\r\nexport const saveProfileThunkCreator = (profile: Profile_PropsType): AppThunk => async (dispatch: AppDispatch, getState) => {\r\n    let userId = getState().auth.id\r\n    let res = await profileAPI.saveProfile(profile)\r\n    if (res.data.resultCode === 0) {\r\n        if (userId !== null) {\r\n            dispatch(setUserProfileThunkCreator(userId))\r\n        } else {\r\n            throw new Error(`userId can't be null`)\r\n        }\r\n    } else {\r\n        dispatch(stopSubmit('edit-profile', {_error: res.data.messages[0]}))\r\n        return Promise.reject(res.data.messages[0])\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/user.720f4e12.jpg\";","// types\r\nexport type DialogsItemType = {\r\n    name: string\r\n    id: number\r\n}\r\nexport type MessagesType = {\r\n    id: number\r\n    messages: string\r\n}\r\nexport type InitialDialogsStateType = {\r\n    dialogs: DialogsItemType[],\r\n    messages: MessagesType[]\r\n}\r\nexport type DialogsActionTypes = ReturnType<typeof sendMessage>\r\n\r\n// state\r\nlet initialState: InitialDialogsStateType = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrey'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, messages: 'Hi'},\r\n        {id: 2, messages: 'How is your it-kamasutra?'},\r\n        {id: 3, messages: 'Yo'},\r\n        {id: 4, messages: 'Yo'},\r\n        {id: 5, messages: 'Yo'}\r\n    ]\r\n}\r\n\r\nexport const dialogsReducer = (state: InitialDialogsStateType = initialState, action: DialogsActionTypes) : InitialDialogsStateType => {\r\n    switch (action.type) {\r\n        case 'DIALOGS/SEND_MESSAGE':\r\n            let newMessage: MessagesType = {\r\n                id: new Date().getTime(),\r\n                messages: action.newMessageBody\r\n            }\r\n            return {...state,messages: [...state.messages, newMessage]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const sendMessage = (newMessageBody: string) => {\r\n    return {\r\n        type: 'DIALOGS/SEND_MESSAGE', newMessageBody\r\n    } as const\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__2ygPv\",\"selectedPage\":\"users_selectedPage__NTteQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3wGBX\",\"item\":\"Navbar_item__3EZBU\",\"active\":\"Navbar_active__1x9Ce\"};","import axios from \"axios\";\r\nimport {PhotosType, Profile_PropsType} from \"../components/Profile/ProfileInfo/ProfileInfo\";\r\nimport {UserType} from \"../redux/users-reducer\";\r\n\r\n// types\r\nexport type GetItemsType = {\r\n    items: UserType[]\r\n    error: null | string\r\n    totalCount: number\r\n}\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1\r\n}\r\nexport enum ResultCodeForCaptchaEnum {\r\n    CaptchaIsRequired = 10\r\n}\r\nexport type APIResponseType<D = {}, RC = ResultCodesEnum> = {\r\n    data: D\r\n    messages : Array<string>\r\n    fieldsErrors: Array<string>\r\n    resultCode: RC\r\n}\r\ntype MeResponseDataType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\ntype LoginResponseDataType = {\r\n    userId: number\r\n}\r\ntype SavePhotoResponseDataType = {\r\n    photos: PhotosType\r\n}\r\ntype GetCaptchaUrlResponseType = {\r\n    url: string\r\n}\r\n\r\n// instance\r\nexport const instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {'API-KEY': 'a1c29d8b-1c83-4c49-8a4c-55a3c1e75564'},\r\n})\r\n\r\n// api\r\n\r\nexport const authAPI = {\r\n    getLogin() {\r\n        return instance.get<APIResponseType<MeResponseDataType>>(`auth/me`)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean, captcha: string) {\r\n        return instance.post<APIResponseType<LoginResponseDataType, ResultCodesEnum | ResultCodeForCaptchaEnum>>(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get<Profile_PropsType>(`profile/` + userId)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<APIResponseType>(`profile/status`, {status: status})\r\n\r\n    },\r\n    savePhoto(file: File) {\r\n        let formData = new FormData()\r\n        formData.append('image', file)\r\n\r\n        return instance.put<APIResponseType<SavePhotoResponseDataType>>(`profile/photo`, formData,{\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfile(profile: Profile_PropsType) {\r\n        return instance.put<APIResponseType>(`profile`, profile)\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get<GetCaptchaUrlResponseType>(`security/get-captcha-url`)\r\n    }\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from './Navbar.module.css'\r\n\r\n\r\nexport function Navbar() {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to={'/profile'} activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to={'/dialogs'} activeClassName={s.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to={'/users'} activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={'/news'} activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={'/music'} activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={'/settings'} activeClassName={s.active}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\n\r\n\r\nexport const Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\n\r\n\r\nexport const Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\n","export const updateObjectInArray = (items: any, itemId: any, objPropName: any, newObjProps: any) => {\r\n    return items.map((u: any) => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n}","import {APIResponseType, GetItemsType, instance} from \"./api\";\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage: number, pageSize: number, term: string = '') {\r\n        return instance.get<GetItemsType>(`users?page=${currentPage}&count=${pageSize}&term=${term}`)\r\n            .then(res => res.data)\r\n    },\r\n    deleteFollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(res => res.data) as Promise<APIResponseType>\r\n    },\r\n    postFollow(userId: number) {\r\n        return instance.post<APIResponseType>(`follow/${userId}`)\r\n            .then(res => res.data)\r\n    }\r\n}","import {APIResponseType} from \"../api/api\";\r\nimport {PhotosType} from \"../components/Profile/ProfileInfo/ProfileInfo\";\r\nimport {AppDispatch, AppThunk} from \"./redux-store\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\nimport { userAPI } from \"../api/users-api\";\r\n\r\n// types\r\nexport type  UserType = {\r\n    id: number\r\n    photos: PhotosType\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n}\r\nexport type InitialStateType = {\r\n    users: UserType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n    filter: FilterType\r\n}\r\nexport type FilterType = {\r\n    term: string\r\n}\r\nexport type UsersActionTypes =\r\n    | ReturnType<typeof follow>\r\n    | ReturnType<typeof unfollow>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setUsersTotalCount>\r\n    | ReturnType<typeof toggleIsFetching>\r\n    | ReturnType<typeof toggleIsFollowingProgress>\r\n    | ReturnType<typeof setFilter>\r\n\r\n// state\r\nlet initialState: InitialStateType = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n    filter: {\r\n        term: ''\r\n    }\r\n}\r\n\r\nexport const usersReducer = (state: InitialStateType = initialState, action: UsersActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'USERS/FOLLOW':\r\n            return {...state, users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})}\r\n        case 'USERS/UNFOLLOW':\r\n            return {...state, users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})}\r\n        case 'USERS/SET_USERS':\r\n            return {...state, users: action.users}\r\n        case 'USERS/SET_CURRENT_PAGE':\r\n            return {...state, currentPage: action.currentPage}\r\n        case 'USERS/SET_USERS_TOTAL_COUNT':\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        case 'USERS/TOGGLE_IS_FETCHING':\r\n            return {...state, isFetching: action.isFetching}\r\n        case 'USERS/SET_FILTER':\r\n            return {...state, filter: action.payload}\r\n        case 'USERS/TOGGLE_IS_FOLLOWING_PROGRESS':\r\n            return {\r\n                ...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const follow = (userId: number) => ({type: 'USERS/FOLLOW', userId} as const)\r\nexport const unfollow = (userId: number) => ({type: 'USERS/UNFOLLOW', userId} as const)\r\nexport const setUsers = (users: UserType[]) => ({type: 'USERS/SET_USERS', users} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({type: 'USERS/SET_CURRENT_PAGE', currentPage} as const)\r\nexport const setFilter = (term: string) => ({type: 'USERS/SET_FILTER', payload: {term}} as const)\r\nexport const setUsersTotalCount = (totalCount: number) => ({type: 'USERS/SET_USERS_TOTAL_COUNT', totalCount} as const)\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: 'USERS/TOGGLE_IS_FETCHING', isFetching} as const)\r\nexport const toggleIsFollowingProgress = (isFetching: boolean, userId: number) => ({\r\n    type: 'USERS/TOGGLE_IS_FOLLOWING_PROGRESS', isFetching, userId} as const)\r\n\r\n// thunks\r\nexport const requestUsersThunkCreator = (currentPage: number, pageSize: number, term: string): AppThunk => async (dispatch: AppDispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(currentPage))\r\n    dispatch(setFilter(term))\r\n    let data = await userAPI.getUsers(currentPage, pageSize, term)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(data.items))\r\n    dispatch(setUsersTotalCount(data.totalCount))\r\n}\r\nconst followUnfollowFlow = async (dispatch: AppDispatch,\r\n                                   userId: number,\r\n                                   apiMethod: (userId: number) => Promise<APIResponseType>,\r\n                                   actionCreator: (userId: number) => UsersActionTypes) => {\r\n    dispatch(toggleIsFollowingProgress(true, userId))\r\n    let response = await apiMethod(userId)\r\n\r\n    if (response.resultCode == 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleIsFollowingProgress(false, userId))\r\n}\r\nexport const followThunkCreator = (userId: number): AppThunk => async (dispatch: AppDispatch) => {\r\n    await followUnfollowFlow(dispatch, userId, userAPI.postFollow.bind(userAPI), follow)\r\n}\r\nexport const unFollowThunkCreator = (userId: number): AppThunk => async (dispatch: AppDispatch) => {\r\n    await followUnfollowFlow(dispatch, userId, userAPI.deleteFollow.bind(userAPI), unfollow)\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport s from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.jpg\";\r\nimport {UserType} from \"../../redux/users-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n// types\r\nexport type UserPropsType = {\r\n    user: UserType\r\n    followingInProgress: number[]\r\n    followThunkCreator: (userId: number) => void\r\n    unFollowThunkCreator: (userId: number) => void\r\n}\r\n\r\n// component\r\nexport const User = (props: UserPropsType) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                        <NavLink to={'/profile/' + props.user.id}>\r\n                        <img src={props.user.photos.small != null ? props.user.photos.small : userPhoto} className={s.userPhoto} alt=''/>\r\n                            </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {props.user.followed ?\r\n                            <button disabled={props.followingInProgress.some(id => id === props.user.id)} onClick={() => {\r\n                                props.unFollowThunkCreator(props.user.id)\r\n                            }\r\n                            }> Unfollow</button> :\r\n                            <button disabled={props.followingInProgress.some(id => id === props.user.id)} onClick={() => {\r\n                                props.followThunkCreator(props.user.id)\r\n                            }\r\n                            }> Follow</button>}\r\n                    </div>\r\n                </span>\r\n            <span>\r\n                    <span>\r\n                        <div>{props.user.name}</div>\r\n                        <div>{props.user.status}</div>\r\n                        <div>{'id: '}{props.user.id}</div>\r\n                    </span>\r\n                </span>\r\n        </div>)\r\n}","import React, {useState} from \"react\";\r\nimport s from './Paginator.module.css';\r\nimport cn from 'classnames'\r\n\r\n// types\r\nexport type PaginatorPropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage?: number\r\n    onCurrentPageChanged?: (currentPage: number) => void\r\n    portionSize?: number\r\n}\r\n\r\n// component\r\nexport const Paginator: React.FC<PaginatorPropsType> = ({totalItemsCount, currentPage= 1, onCurrentPageChanged= x => x, pageSize, portionSize= 10 }) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n\r\n    let pages: number[] = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div className={cn(s.paginator)}>\r\n            { portionNumber > 1 &&\r\n            <button onClick={() => { setPortionNumber(portionNumber - 1)\r\n            }}>PREV</button> }\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                return <span className={cn({\r\n                    [s.selectedPage]: currentPage === p\r\n                }, s.pageNumber) }\r\n                             key={p}\r\n                             onClick={() => {\r\n                    onCurrentPageChanged(p)\r\n                }}>{p}</span>\r\n            })}\r\n            { portionCount > portionNumber &&\r\n                <button onClick={() => { setPortionNumber(portionNumber + 1)\r\n                }}>NEXT</button> }\r\n        </div>\r\n    )\r\n}\r\n","import {Field, Form, Formik} from \"formik\";\r\nimport React from \"react\";\r\nimport {FilterType} from \"../../redux/users-reducer\";\r\n\r\ntype UsersSearchFormType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\nexport const UsersSearchForm = (props: UsersSearchFormType) => {\r\n\r\n    const submit = (values: FilterType, {setSubmitting}: {setSubmitting: (isSubmitting: boolean) => void}) => {\r\n        props.onFilterChanged(values)\r\n        setSubmitting(false)\r\n    }\r\n\r\n    const usersSearchFormValidate = (values: any) => {\r\n        const errors = {}\r\n        return errors\r\n    }\r\n\r\n    return <div>\r\n        <Formik initialValues={{term: ''}}\r\n                validate={usersSearchFormValidate}\r\n                onSubmit={submit}\r\n        >\r\n            {({isSubmitting}) => (\r\n                <Form>\r\n                    <Field type='text' name='term'/>\r\n                    <button type='submit' disabled={isSubmitting}>\r\n                        Find\r\n                    </button>\r\n                </Form>\r\n            )}\r\n\r\n        </Formik>\r\n    </div>\r\n}","import React from \"react\";\r\nimport {FilterType, UserType} from \"../../redux/users-reducer\";\r\nimport {User} from \"./User\";\r\nimport {Paginator} from \"../common/Paginator/Paginator\";\r\nimport {UsersSearchForm} from \"./UsersSearchForm\";\r\n\r\n\r\n// types\r\nexport type UsersPropsType = {\r\n    users: UserType[]\r\n    currentPage: number\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    onCurrentPageChanged: (currentPage: number) => void\r\n    followingInProgress: number[]\r\n    followThunkCreator: (userId: number) => void\r\n    unFollowThunkCreator: (userId: number) => void\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\n// component\r\nexport const Users = (props: UsersPropsType) => {\r\n    return <div>\r\n            <UsersSearchForm onFilterChanged={props.onFilterChanged}/>\r\n        <div>\r\n            <Paginator totalItemsCount={props.totalUsersCount} pageSize={props.pageSize} currentPage={props.currentPage} onCurrentPageChanged={props.onCurrentPageChanged} />\r\n        </div>\r\n            {\r\n                props.users.map(u => <User key={u.id}\r\n                                           user={u}\r\n                                           followingInProgress={props.followingInProgress}\r\n                                           followThunkCreator={props.followThunkCreator}\r\n                                           unFollowThunkCreator={props.unFollowThunkCreator}/>\r\n                )\r\n            }\r\n    </div>\r\n}\r\n\r\n","import {AppRootStateType} from \"./redux-store\";\r\n\r\nexport const getUsers = (state: AppRootStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state: AppRootStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppRootStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppRootStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppRootStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppRootStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getUsersFilter = (state: AppRootStateType) => {\r\n    return state.usersPage.filter\r\n}\r\n","import {connect} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../redux/redux-store\";\r\nimport {\r\n    FilterType,\r\n    followThunkCreator, requestUsersThunkCreator,\r\n    unFollowThunkCreator,\r\n    UserType\r\n} from \"../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers, getUsersFilter\r\n} from \"../../redux/users-selectors\";\r\n\r\n// types\r\ntype MapStateToPropsType = {\r\n    users: UserType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n    filter: FilterType\r\n}\r\ntype UsersAPIComponentPropsType = {\r\n    users: UserType[]\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n    filter: FilterType\r\n    requestUsersThunkCreator: (currentPage: number, pageSize: number, term: string) => void\r\n    followThunkCreator: (userId: number) => void\r\n    unFollowThunkCreator: (userId: number) => void\r\n}\r\n\r\n// component\r\nclass UsersAPIComponent extends React.Component<UsersAPIComponentPropsType, AppRootStateType> {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.requestUsersThunkCreator(currentPage, pageSize, '')\r\n    }\r\n\r\n    onCurrentPageChanged = (currentPage: number) => {\r\n        const {pageSize, filter} = this.props\r\n        this.props.requestUsersThunkCreator(currentPage, pageSize, filter.term)\r\n    }\r\n\r\n    onFilterChanged = (filter: FilterType) => {\r\n        const {pageSize} = this.props\r\n        this.props.requestUsersThunkCreator(1, pageSize, filter.term)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users users={this.props.users}\r\n                   currentPage={this.props.currentPage}\r\n                   pageSize={this.props.pageSize}\r\n                   totalUsersCount={this.props.totalUsersCount}\r\n                   onCurrentPageChanged={this.onCurrentPageChanged}\r\n                   followingInProgress={this.props.followingInProgress}\r\n                   followThunkCreator={this.props.followThunkCreator}\r\n                   unFollowThunkCreator={this.props.unFollowThunkCreator}\r\n                   onFilterChanged={this.onFilterChanged}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType): MapStateToPropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        filter: getUsersFilter(state)\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        requestUsersThunkCreator,\r\n        followThunkCreator,\r\n        unFollowThunkCreator\r\n    })\r\n)(UsersAPIComponent)\r\n\r\n","import React from \"react\";\r\nimport s from './Header.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n// types\r\nexport type HeaderPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    logoutThunkCreator: () => void\r\n}\r\n\r\n// component\r\nexport function Header(props: HeaderPropsType) {\r\n    return <header className={s.header}>\r\n        <img\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/58/Instagram-Icon.png/480px-Instagram-Icon.png\" alt=''/>\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth\r\n                ? <div> {props.login} - <button onClick={props.logoutThunkCreator}>Log out</button> </div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n}","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {AppDispatch, AppThunk} from \"./redux-store\";\r\n\r\n// types\r\nexport type InitialStateType = {\r\n    id: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean,\r\n    captchaUrl: string | null\r\n}\r\nexport type AuthActionTypes = ReturnType<typeof setAuthUserData> | ReturnType<typeof getCaptchaUrl>\r\n\r\n// state\r\nlet initialState: InitialStateType = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n}\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: AuthActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'AUTH/SET_AUTH_USER_DATA':\r\n        case 'AUTH/GET_CAPTCHA_URL_SUCCESS':\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setAuthUserData = (id: number | null, email: string | null, login: string | null, isAuth: boolean) => ({type: 'AUTH/SET_AUTH_USER_DATA', payload: {id, email, login, isAuth}} as const)\r\nexport const getCaptchaUrl = (captchaUrl: string) => ({type: 'AUTH/GET_CAPTCHA_URL_SUCCESS', payload: {captchaUrl}} as const)\r\n\r\n// thunks\r\nexport const getLoginThunkCreator = (): AppThunk => async (dispatch: AppDispatch) => {\r\n    let res = await authAPI.getLogin()\r\n    if (res.data.resultCode === 0) {\r\n        let {id, email, login} = res.data.data\r\n        const action = setAuthUserData(id, email, login, true)\r\n        dispatch(action)\r\n    }\r\n}\r\nexport const loginThunkCreator = (email: string, password: string, rememberMe: boolean, captcha: string): AppThunk => async (dispatch: AppDispatch) => {\r\n    let res = await authAPI.login(email, password, rememberMe, captcha)\r\n    debugger\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(getLoginThunkCreator())\r\n    } else {\r\n        if (res.data.resultCode === 10) {\r\n        dispatch(getCaptchaUrlThunkCreator())\r\n    }\r\n        let message = res.data.messages.length > 0 ? res.data.messages[0] : 'Some error'\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n}\r\nexport const getCaptchaUrlThunkCreator = (): AppThunk => async (dispatch: AppDispatch) => {\r\n    let res = await securityAPI.getCaptchaUrl()\r\n    let captchaUrl = res.data.url\r\n    dispatch(getCaptchaUrl(captchaUrl))\r\n}\r\nexport const logoutThunkCreator = (): AppThunk => async (dispatch: AppDispatch) => {\r\n    let res = await authAPI.logout()\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}","import React from \"react\";\r\nimport {Header} from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutThunkCreator} from \"../../redux/auth-reducer\";\r\nimport {AppRootStateType} from \"../../redux/redux-store\";\r\n\r\n// types\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\ntype MapDispatchToPropsType = {\r\n    logoutThunkCreator: () => void\r\n}\r\ntype HeaderAPIContainerPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\n// component\r\nclass HeaderAPIContainer extends React.Component<HeaderAPIContainerPropsType, AppRootStateType> {\r\n\r\n    render() {\r\n        return <Header isAuth={this.props.isAuth}\r\n                       login={this.props.login}\r\n                       logoutThunkCreator={this.props.logoutThunkCreator}\r\n        />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType): MapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    }\r\n}\r\n\r\nexport const HeaderContainer = connect(mapStateToProps, {logoutThunkCreator})(HeaderAPIContainer)\r\n","import React from 'react'\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormControls/FormControls\";\r\nimport {required} from \"../../utils/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginThunkCreator} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../redux/redux-store\";\r\nimport s from '../common/FormControls/FormControls.module.css'\r\n\r\n// types\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\ntype LoginFormOwnProps = {\r\n    captchaUrl: string | null\r\n}\r\ntype mapDispatchToPropsType = {\r\n    loginThunkCreator: (email: string, password: string, rememberMe: boolean, captcha: string) => void\r\n}\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n    captchaUrl: string | null\r\n}\r\ntype PropsType = mapDispatchToPropsType & mapStateToPropsType\r\n\r\n// component\r\nexport const LoginForm: React.FC<InjectedFormProps<FormDataType, LoginFormOwnProps> & LoginFormOwnProps> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Email'} name={'email'} component={Input} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'Password'} name={'password'} component={Input} type={'password'} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field component={Input} name={'rememberMe'} type=\"checkbox\"/> remember me\r\n            </div>\r\n            {props.captchaUrl && <img src={props.captchaUrl} alt=''/>}\r\n            {props.captchaUrl && <Field placeholder={'Symbols from image'} name={'captcha'} component={Input} validate={required}  />}\r\n\r\n            {props.error && <div className={s.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType): mapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl\r\n})\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType, LoginFormOwnProps>({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props: PropsType) => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        props.loginThunkCreator(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n    </div>\r\n}\r\n\r\nexport default connect(mapStateToProps, {loginThunkCreator})(Login)","import {getLoginThunkCreator} from \"./auth-reducer\";\r\nimport {AppDispatch, AppThunk} from \"./redux-store\";\r\n\r\n// types\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\nexport type ActionTypes = ReturnType<typeof initializedSuccess>\r\n\r\n// state\r\nlet initialState: InitialStateType = {\r\n    initialized: false\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/INITIALIZED_SUCCESS':\r\n            return {...state, initialized: true}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const initializedSuccess = () => ({type: 'APP/INITIALIZED_SUCCESS'} as const)\r\n\r\n// thunks\r\nexport const initializeApp = (): AppThunk => (dispatch: AppDispatch) => {\r\n        let promise = dispatch(getLoginThunkCreator())\r\n        Promise.all([promise])\r\n            .then(() => {\r\n                dispatch(initializedSuccess())\r\n            })\r\n    }\r\n\r\n\r\n","import {applyMiddleware, combineReducers, compose, legacy_createStore as createStore} from \"redux\";\r\nimport {ProfileActionTypes, profileReducer} from \"./profile-reducer\";\r\nimport {DialogsActionTypes, dialogsReducer} from \"./dialogs-reducer\";\r\nimport {UsersActionTypes, usersReducer} from \"./users-reducer\";\r\nimport {AuthActionTypes, authReducer} from \"./auth-reducer\";\r\nimport thunkMiddleware, {ThunkAction, ThunkDispatch} from \"redux-thunk\"\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport {ActionTypes, appReducer} from \"./app-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)\r\n));\r\n\r\ntype AppActionTypes = ProfileActionTypes | DialogsActionTypes | UsersActionTypes | AuthActionTypes | ActionTypes\r\nexport type AppRootStateType = ReturnType<typeof store.getState>\r\nexport type AppDispatch = ThunkDispatch<AppRootStateType, unknown, AppActionTypes>\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, AppActionTypes>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\"\r\n\r\nexport function withSuspense<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n    return (props: WCP) => {\r\n        return <React.Suspense fallback={<div>loading...</div>} >\r\n            <WrappedComponent {...props} />\r\n        </React.Suspense>\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {BrowserRouter, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\nimport {News} from \"./components/News/News\";\nimport {Music} from \"./components/Music/Music\";\nimport {Settings} from \"./components/Settings/Settings\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport {HeaderContainer} from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {AppRootStateType, store} from \"./redux/redux-store\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport {Preloader} from \"./components/common/Preloader/Preloader\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\n\nconst SuspendedDialogs = withSuspense(DialogsContainer)\nconst SuspendedProfile = withSuspense(ProfileContainer)\n\ntype mapStateToPropsType = {\n    initialized: boolean\n}\ntype MapDispatchToPropsType = {\n    initializeApp: () => void\n}\ntype AppPropsType = mapStateToPropsType & MapDispatchToPropsType\n\n\nclass App extends React.Component<AppPropsType, AppRootStateType> {\n\n    catchAllUnhandledErrors = (e: PromiseRejectionEvent) => {\n        alert('Some error occurred')\n    }\n\n    componentDidMount() {\n        this.props.initializeApp()\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors)\n    }\n\n    componentWillMount() {\n        window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors)\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <BrowserRouter>\n                <div className={'app-wrapper'}>\n                    <HeaderContainer/>\n                    <Navbar/>\n                    <div className={'app-wrapper-content'}>\n                        <Switch>\n                            <Route exact path='/' render={() => <Redirect to={'/profile'}/>}/>\n                            <Route path={'/profile/:userId?'} render={() => <SuspendedProfile/>}/>\n                            <Route path={'/dialogs'} render={() => <SuspendedDialogs/>}/>\n                            <Route path={'/users'} render={() => <UsersContainer/>}/>\n                            <Route path={'/login'} render={() => <Login/>}/>\n                            <Route path={'/news'} render={() => <News/>}/>\n                            <Route path={'/music'} render={() => <Music/>}/>\n                            <Route path={'/settings'} render={() => <Settings/>}/>\n                            <Route path={'*'} render={() => <div>404 NOT FOUND</div>}/>\n                        </Switch>\n                    </div>\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\n\nconst mapStateToProps = (state: AppRootStateType): mapStateToPropsType => {\n    return {\n        initialized: state.app.initialized\n    }\n}\n\nlet AppContainer = compose<React.ComponentType>(\n    connect(mapStateToProps, {initializeApp}),\n    withRouter\n)(App)\n\nconst SamuraiJSApp: React.FC = () => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </BrowserRouter>\n}\n\nexport default SamuraiJSApp\n\n\n","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from 'react-dom';\nimport SamuraiJSApp from \"./App\";\n\n    ReactDOM.render(\n        <SamuraiJSApp/>,\n        document.getElementById('root')\n    );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from \"react\";\r\nimport s from './FormControls.module.css'\r\nimport {Field, WrappedFieldMetaProps, WrappedFieldProps} from \"redux-form\";\r\nimport { FieldValidatorType } from \"../../../utils/validators\";\r\n\r\n// types\r\ntype FormControlPropsType = {\r\n    meta: WrappedFieldMetaProps\r\n}\r\nexport type GetStringKeys<T> = Extract<keyof T, string>\r\n\r\n// component\r\nconst FormControl: React.FC<FormControlPropsType> = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            { hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport function createField<FormKeysType extends string>(placeholder: string | undefined,\r\n                                                         name: FormKeysType,\r\n                                                         validators: Array<FieldValidatorType>,\r\n                                                         component: React.FC<WrappedFieldProps>,\r\n                                                         props = {}, text = \"\") {\r\n    return <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__vX3Kp\",\"error\":\"FormControls_error__24hnp\",\"formSummaryError\":\"FormControls_formSummaryError__2XQde\"};","export type FieldValidatorType = (value: string) => string | undefined\r\n\r\nexport const required: FieldValidatorType = (value) => {\r\n    if (!value) {\r\n        return 'Field is required'\r\n    } else if (value.trim() === '') {\r\n        return 'Field is required'\r\n    } else {\r\n        return undefined\r\n    }\r\n\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number): FieldValidatorType => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/preloader.372b42cf.gif\";","import React from \"react\";\r\nimport preloader from '../../../assets/images/preloader.gif'\r\n\r\nexport const Preloader = () => {\r\n    return <div>\r\n        <img src={preloader} alt='' />\r\n    </div>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__38LH3\",\"pageNumber\":\"Paginator_pageNumber__12Z-L\",\"selectedPage\":\"Paginator_selectedPage__GpwoB\"};"],"sourceRoot":""}