{"version":3,"sources":["pages/Chat/ChatPage.tsx"],"names":["Chat","dispatch","useDispatch","useEffect","startMessagesListeningThunkCreator","stopMessagesListeningThunkCreator","Messages","AddMessageForm","messages","useSelector","state","chat","style","height","overflow","map","m","index","Message","message","src","photo","width","alt","userName","useState","setMessage","onChange","e","currentTarget","value","onClick","sendMessageThunkCreator","ChatPage"],"mappings":"2KAsBMA,EAAiB,WACnB,IAAMC,EAAWC,cASjB,OAPAC,qBAAU,WAEN,OADAF,EAASG,eACF,WACHH,EAASI,kBAEd,IAEI,gCACH,cAACC,EAAD,IACA,cAACC,EAAD,QAIFD,EAAqB,WACvB,IAAME,EAAWC,aAAY,SAACC,GAAD,OAA6BA,EAAMC,KAAKH,YAErE,OAAO,qBAAKI,MAAO,CAACC,OAAQ,QAASC,SAAU,QAAxC,SACFN,EAASO,KAAI,SAACC,EAAGC,GAAJ,OAAc,cAACC,EAAD,CAAqBC,QAASH,GAAhBC,SAI5CC,EAAgD,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACpD,OAAO,gCACH,qBAAKC,IAAKD,EAAQE,MAAOT,MAAO,CAACU,MAAO,QAASC,IAAI,KADlD,IACuD,4BAAIJ,EAAQK,WACtE,uBACCL,EAAQA,QACT,2BAIFZ,EAA2B,WAC7B,MAA8BkB,mBAAS,IAAvC,mBAAON,EAAP,KAAgBO,EAAhB,KACA,EAAsCD,mBAA8B,WAApE,mBACMxB,GADN,UACiBC,eAUjB,OAAO,gCACH,8BACI,0BAAUyB,SAAU,SAACC,GAAD,OAAOF,EAAWE,EAAEC,cAAcC,QAAQA,MAAOX,MAEzE,8BACI,wBAAQY,QAbW,WAClBZ,IAGLlB,EAAS+B,YAAwBb,IACjCO,EAAW,MAQP,wBAKGO,UA9DY,WACvB,OAAO,8BACH,cAACjC,EAAD","file":"static/js/5.8131f348.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    sendMessageThunkCreator,\r\n    startMessagesListeningThunkCreator,\r\n    stopMessagesListeningThunkCreator\r\n} from \"../../redux/chat-reducer\";\r\nimport {AppRootStateType} from \"../../redux/redux-store\";\r\n\r\nexport type ChatMessageType = {\r\n    message: string\r\n    photo: string\r\n    userId: number\r\n    userName: string\r\n}\r\n\r\nconst ChatPage: React.FC = () => {\r\n    return <div>\r\n        <Chat />\r\n    </div>\r\n}\r\n\r\nconst Chat: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(startMessagesListeningThunkCreator())\r\n        return () => {\r\n            dispatch(stopMessagesListeningThunkCreator())\r\n        }\r\n    }, [])\r\n\r\n    return <div>\r\n        <Messages/>\r\n        <AddMessageForm/>\r\n    </div>\r\n}\r\n\r\nconst Messages: React.FC = () => {\r\n    const messages = useSelector((state: AppRootStateType) => state.chat.messages)\r\n\r\n    return <div style={{height: '400px', overflow: 'auto'}}>\r\n        {messages.map((m, index) => <Message key={index} message={m} />)}\r\n    </div>\r\n}\r\n\r\nconst Message: React.FC<{message: ChatMessageType}> = ({message}) => {\r\n    return <div>\r\n        <img src={message.photo} style={{width: '30px'}} alt=''/> <b>{message.userName}</b>\r\n        <br/>\r\n        {message.message}\r\n        <hr/>\r\n    </div>\r\n}\r\n\r\nconst AddMessageForm: React.FC = () => {\r\n    const [message, setMessage] = useState('')\r\n    const [readyStatus, setReadyStatus] = useState<'pending' | 'ready'>('pending')\r\n    const dispatch = useDispatch()\r\n\r\n    const sendMessageHandler = () => {\r\n        if (!message) {\r\n            return\r\n        }\r\n        dispatch(sendMessageThunkCreator(message))\r\n        setMessage('')\r\n    }\r\n\r\n    return <div>\r\n        <div>\r\n            <textarea onChange={(e) => setMessage(e.currentTarget.value)} value={message}></textarea>\r\n        </div>\r\n        <div>\r\n            <button onClick={sendMessageHandler}>Send</button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ChatPage"],"sourceRoot":""}